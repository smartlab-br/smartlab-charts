{"version":3,"file":"d3plus-network.js","sources":["../src/Network.js","../src/Rings.js","../src/Sankey.js"],"sourcesContent":["/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, mean, min, merge} from \"d3-array\";\nimport {nest} from \"d3-collection\";\n// import {forceSimulation} from \"d3-force\";\nimport * as scales from \"d3-scale\";\nimport {zoomTransform} from \"d3-zoom\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {dataLoad as load, Viz} from \"d3plus-viz\";\n\n/**\n    @class Network\n    @extends external:Viz\n    @desc Creates a network visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/getting-started/) for help getting started using the Network class.\n*/\nexport default class Network extends Viz {\n\n  /**\n      @memberof Network\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._labelCutoff = 100;\n    this._links = [];\n    this._noDataMessage = false;\n    this._nodes = [];\n    this._on[\"click.shape\"] = (d, i) => {\n\n      this._tooltipClass.data([]).render();\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        if (this._focus && this._focus === d.id) {\n\n          this.active(false);\n          this._on.mouseenter.bind(this)(d, i);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const id = this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i),\n                links = this._linkLookup[id],\n                node = this._nodeLookup[id];\n\n          const filterIds = [node.id];\n          let xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n          links.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return h.source.id === node.id || h.target.id === node.id;\n            else return filterIds.includes(this._ids(h, x)[this._drawDepth]);\n          });\n\n          this._focus = d.id;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n      }\n\n    };\n    this._on[\"click.legend\"] = (d, i) => {\n\n      const ids = this._id(d);\n      let id = this._ids(d);\n      id = id[id.length - 1];\n\n      if (this._hover && this._drawDepth >= this._groupBy.length - 1) {\n\n        if (this._focus && this._focus === ids) {\n\n          this.active(false);\n          this._on.mouseenter.bind(this)(d, i);\n\n          this._focus = undefined;\n          this._zoomToBounds(null);\n\n        }\n        else {\n\n          this.hover(false);\n\n          const nodes = ids.map(id => this._nodeLookup[id]);\n\n          const filterIds = [id];\n          let xDomain = [nodes[0].x - nodes[0].r, nodes[0].x + nodes[0].r],\n              yDomain = [nodes[0].y - nodes[0].r, nodes[0].y + nodes[0].r];\n\n          nodes.forEach(l => {\n            filterIds.push(l.id);\n            if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n            if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n            if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n            if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n          });\n\n          this.active((h, x) => {\n            if (h.source && h.target) return filterIds.includes(h.source.id) && filterIds.includes(h.target.id);\n            else {\n              const myIds = this._ids(h, x);\n              return filterIds.includes(myIds[myIds.length - 1]);\n            }\n          });\n\n          this._focus = ids;\n          const t = zoomTransform(this._container.node());\n          xDomain = xDomain.map(d => d * t.k + t.x);\n          yDomain = yDomain.map(d => d * t.k + t.y);\n          this._zoomToBounds([[xDomain[0], yDomain[0]], [xDomain[1], yDomain[1]]]);\n\n        }\n\n        this._on[\"mousemove.legend\"].bind(this)(d, i);\n\n      }\n\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\",\n        strokeWidth: 1\n      }\n    });\n    this._x = accessor(\"x\");\n    this._y = accessor(\"y\");\n\n    this._zoom = true;\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes.reduce((obj, d, i) => {\n      obj[this._nodeGroupBy ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        fx: d !== undefined && this._x(d) !== undefined ? this._x(d) : this._x(n),\n        fy: d !== undefined && this._y(d) !== undefined ? this._y(d) : this._y(n),\n        node: n,\n        r: this._size ? d !== undefined && this._size(d) !== undefined ? this._size(d) : this._size(n) : this._sizeMin,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const xExtent = extent(nodes.map(n => n.fx)),\n          yExtent = extent(nodes.map(n => n.fy));\n\n    const x = scales.scaleLinear().domain(xExtent).range([0, width]),\n          y = scales.scaleLinear().domain(yExtent).range([0, height]);\n\n    const nodeRatio = (xExtent[1] - xExtent[0]) / (yExtent[1] - yExtent[0]),\n          screenRatio = width / height;\n\n    if (nodeRatio > screenRatio) {\n      const h = height * screenRatio / nodeRatio;\n      y.range([(height - h) / 2, height - (height - h) / 2]);\n    }\n    else {\n      const w = width * nodeRatio / screenRatio;\n      x.range([(width - w) / 2, width - (width - w) / 2]);\n    }\n\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.y = y(n.fy);\n    });\n\n    const rExtent = extent(nodes.map(n => n.r));\n    let rMax = this._sizeMax || min(\n      merge(nodes\n        .map(n1 => nodes\n          .map(n2 => n1 === n2 ? null : shapes.pointDistance([n1.x, n1.y], [n2.x, n2.y]))\n        )\n      )\n    ) / 2;\n\n    const r = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n                .domain(rExtent).range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]),\n          xDomain = x.domain(),\n          yDomain = y.domain();\n\n    const xOldSize = xDomain[1] - xDomain[0],\n          yOldSize = yDomain[1] - yDomain[0];\n\n    nodes.forEach(n => {\n      const size = r(n.r);\n      if (xDomain[0] > x.invert(n.x - size)) xDomain[0] = x.invert(n.x - size);\n      if (xDomain[1] < x.invert(n.x + size)) xDomain[1] = x.invert(n.x + size);\n      if (yDomain[0] > y.invert(n.y - size)) yDomain[0] = y.invert(n.y - size);\n      if (yDomain[1] < y.invert(n.y + size)) yDomain[1] = y.invert(n.y + size);\n    });\n\n    const xNewSize = xDomain[1] - xDomain[0],\n          yNewSize = yDomain[1] - yDomain[0];\n\n    rMax *= min([xOldSize / xNewSize, yOldSize / yNewSize]);\n    r.range([rExtent[0] === rExtent[1] ? rMax : min([rMax / 2, this._sizeMin]), rMax]);\n    x.domain(xDomain);\n    y.domain(yDomain);\n\n    nodes.forEach(n => {\n      n.x = x(n.fx);\n      n.fx = n.x;\n      n.y = y(n.fy);\n      n.fy = n.y;\n      n.r = r(n.r);\n      n.width = n.r * 2;\n      n.height = n.r * 2;\n    });\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    // forceSimulation(nodes)\n    //   .on(\"tick\", () => this._shapes.forEach(s => s.render()));\n\n    const nodeIndices = nodes.map(n => n.node);\n    const links = this._links.map(l => ({\n      source: typeof l.source === \"number\"\n        ? nodes[nodeIndices.indexOf(this._nodes[l.source])]\n        : nodeLookup[l.source.id],\n      target: typeof l.target === \"number\"\n        ? nodes[nodeIndices.indexOf(this._nodes[l.target])]\n        : nodeLookup[l.target.id]\n    }));\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    this._container = this._select.selectAll(\"svg.d3plus-network\").data([0]);\n\n    this._container = this._container.enter().append(\"svg\")\n        .attr(\"class\", \"d3plus-network\")\n        .attr(\"opacity\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"x\", this._margin.left)\n        .attr(\"y\", this._margin.top)\n        .style(\"background-color\", \"transparent\")\n      .merge(this._container);\n\n    this._container.transition(this._transition)\n      .attr(\"opacity\", 1)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"x\", this._margin.left)\n      .attr(\"y\", this._margin.top);\n\n    const hitArea = this._container.selectAll(\"rect.d3plus-network-hitArea\").data([0]);\n    hitArea.enter().append(\"rect\")\n        .attr(\"class\", \"d3plus-network-hitArea\")\n      .merge(hitArea)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill\", \"transparent\")\n        .on(\"click\", () => {\n          if (this._focus) {\n            this.active(false);\n            this._focus = undefined;\n            this._zoomToBounds(null);\n          }\n        });\n\n    this._zoomGroup = this._container.selectAll(\"g.d3plus-network-zoomGroup\").data([0]);\n    const parent = this._zoomGroup = this._zoomGroup.enter().append(\"g\")\n        .attr(\"class\", \"d3plus-network-zoomGroup\")\n      .merge(this._zoomGroup);\n\n    this._shapes.push(new shapes.Path()\n      .config(this._shapeConfig)\n      .config(this._shapeConfig.Path)\n      .d(d => `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(links)\n      .select(elem(\"g.d3plus-network-links\", {parent, transition, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._labelCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      select: elem(\"g.d3plus-network-nodes\", {parent, transition, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .config(shapeConfig[d.key] || {})\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Network\n      @desc Defines the maximum number of nodes that allow all labels to be shown. When the number of nodes is over this amount, labels will only be shown on hover and click.\n      @param {Number} *value* = 100\n      @chainable\n  */\n  labelCutoff(_) {\n    return arguments.length ? (this._labelCutoff = _, this) : this._labelCutoff;\n  }\n\n  /**\n      @memberof Network\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Network.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"links\");\n      const d = [load.bind(this), _, f, \"links\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = undefined]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Network\n      @desc The list of nodes to be used for drawing the network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"nodes\");\n      const d = [load.bind(this), _, f, \"nodes\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the size scale maximum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale maximum. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the size scale minimum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale minimum.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the size scale to the specified string and returns the current class instance. If *value* is not specified, returns the current size scale.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the x accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current x accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = a => mean(a);\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n      @memberof Network\n      @desc If *value* is specified, sets the y accessor to the specified function or string matching a key in the data and returns the current class instance. The data passed to .data() takes priority over the .nodes() data array. If *value* is not specified, returns the current y accessor. By default, the x and y positions are determined dynamically based on default force layout properties.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_]) this._aggs[_] = a => mean(a);\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, min} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorLegible} from \"d3plus-color\";\nimport * as shapes from \"d3plus-shape\";\nimport {dataLoad as load, Viz} from \"d3plus-viz\";\n\n/**\n    @class Rings\n    @extends external:Viz\n    @desc Creates a ring visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/simple-rings/) for help getting started using the Rings class.\n*/\nexport default class Rings extends Viz {\n\n  /**\n      @memberof Rings\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._labelCutoff = 100;\n    this._links = [];\n    this._noDataMessage = false;\n    this._nodes = [];\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i) => {\n      defaultMouseMove(d, i);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i),\n              links = this._linkLookup[id],\n              node = this._nodeLookup[id];\n\n        const filterIds = [node.id];\n        const xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n        links.forEach(l => {\n          filterIds.push(l.id);\n          if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n          if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n          if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n          if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) return h.source.id === node.id || h.target.id === node.id;\n          else return filterIds.includes(this._ids(h, x)[this._drawDepth]);\n        });\n      }\n    };\n    this._on[\"click.shape\"] = d => {\n      this._center = d.id;\n      this._draw();\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\",\n        strokeWidth: 1\n      }\n    });\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes;\n\n    if (!this._nodes.length && this._links.length) {\n      const nodeIds = Array.from(new Set(this._links.reduce((ids, link) => ids.concat([link.source, link.target]), [])));\n      nodes = nodeIds.map(node => typeof node === \"object\" ? node : {id: node});\n    }\n\n    nodes = nodes.reduce((obj, d, i) => {\n      obj[this._nodeGroupBy ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        node: n,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const links = this._links.map(link => {\n      const check = [\"source\", \"target\"];\n      return check.reduce((result, check) => {\n        result[check] = typeof link[check] === \"number\" ? nodes[link[check]] : nodeLookup[link[check].id || link[check]];\n        return result;\n      }, {});\n    });\n\n    const linkMap = links.reduce((map, link) => {\n      if (!map[link.source.id]) {\n        map[link.source.id] = [];\n      }\n      map[link.source.id].push(link);\n      if (!map[link.target.id]) {\n        map[link.target.id] = [];\n      }\n      map[link.target.id].push(link);\n      return map;\n    }, {});\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const edges = [],\n          radius = min([height, width]) / 2,\n          ringWidth = radius / 3;\n\n    const primaryRing = ringWidth,\n          secondaryRing = ringWidth * 2;\n\n    const center = nodeLookup[this._center];\n\n    center.x = width / 2;\n    center.y = height / 2;\n    center.r = this._sizeMin ? max([this._sizeMin, primaryRing * .65]) : this._sizeMax ? min([this._sizeMax, primaryRing * .65]) : primaryRing * .65;\n\n    const claimed = [center],\n          primaries = [];\n\n    linkMap[this._center].forEach(edge => {\n      const node = edge.source.id === this._center ? edge.target : edge.source;\n      node.edges = linkMap[node.id].filter(link => link.source.id !== this._center || link.target.id !== this._center);\n      node.edge = edge;\n\n      claimed.push(node);\n      primaries.push(node);\n    });\n\n    primaries.sort((a, b) => a.edges.length - b.edges.length);\n\n    const secondaries = [];\n    let totalEndNodes = 0;\n\n    primaries.forEach(p => {\n      const primaryId = p.id;\n\n      p.edges = p.edges.filter(edge => !claimed.includes(edge.source) && edge.target.id === primaryId ||\n                                       !claimed.includes(edge.target) && edge.source.id === primaryId);\n\n      totalEndNodes += p.edges.length || 1;\n\n      p.edges.forEach(edge => {\n        const {source, target} = edge;\n        const claim = target.id === primaryId ? source : target;\n        claimed.push(claim);\n      });\n    });\n\n    const tau = Math.PI * 2;\n    let offset = 0;\n\n    primaries.forEach((p, i) => {\n      const children = p.edges.length || 1;\n      const space = tau / totalEndNodes * children;\n\n      if (i === 0) {\n        offset -= space / 2;\n      }\n\n      const angle = offset + space / 2 - tau / 4;\n\n      p.radians = angle;\n      p.x = width / 2 + primaryRing * Math.cos(angle);\n      p.y = height / 2 + primaryRing * Math.sin(angle);\n\n      offset += space;\n\n      p.edges.forEach((edge, i) => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n        const s = tau / totalEndNodes;\n        const a = angle - s * children / 2 + s / 2 + s * i;\n\n        node.radians = a;\n        node.x = width / 2 + secondaryRing * Math.cos(a);\n        node.y = height / 2 + secondaryRing * Math.sin(a);\n\n        secondaries.push(node);\n      });\n    });\n\n    const primaryDistance = ringWidth / 2;\n    const secondaryDistance = ringWidth / 4;\n\n    let primaryMax = primaryDistance / 2 - 4;\n    if (primaryDistance / 2 - 4 < 8) {\n      primaryMax = min([primaryDistance / 2, 8]);\n    }\n\n    let secondaryMax = secondaryDistance / 2 - 4;\n    if (secondaryDistance / 2 - 4 < 4) {\n      secondaryMax = min([secondaryDistance / 2, 4]);\n    }\n\n    if (secondaryMax > ringWidth / 10) {\n      secondaryMax = ringWidth / 10;\n    }\n\n    if (secondaryMax > primaryMax && secondaryMax > 10) {\n      secondaryMax = primaryMax * .75;\n    }\n    if (primaryMax > secondaryMax * 1.5) {\n      primaryMax = secondaryMax * 1.5;\n    }\n\n    primaryMax = Math.floor(primaryMax);\n    secondaryMax = Math.floor(secondaryMax);\n\n    let radiusFn;\n\n    if (this._size) {\n      const domain = extent(data, d => d.size);\n\n      if (domain[0] === domain[1]) {\n        domain[0] = 0;\n      }\n\n      radiusFn = scales.scaleLinear()\n        .domain(domain)\n        .rangeRound([3, min([primaryMax, secondaryMax])]);\n\n      const val = center.size;\n      center.r = radiusFn(val);\n    }\n    else {\n      radiusFn = scales.scaleLinear()\n        .domain([1, 2])\n        .rangeRound([primaryMax, secondaryMax]);\n    }\n\n    secondaries.forEach(s => {\n      s.ring = 2;\n      const val = this._size ? s.size : 2;\n      s.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    primaries.forEach(p => {\n      p.ring = 1;\n      const val = this._size ? p.size : 1;\n      p.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    nodes = [center].concat(primaries).concat(secondaries);\n\n    primaries.forEach(p => {\n      const check = [\"source\", \"target\"];\n      const {edge} = p;\n\n      check.forEach(node => {\n        edge[node] = nodes.find(n => n.id === edge[node].id);\n      });\n\n      edges.push(edge);\n\n      linkMap[p.id].forEach(edge => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n\n        if (node.id !== center.id) {\n          let target = secondaries.find(s => s.id === node.id);\n\n          if (!target) {\n            target = primaries.find(s => s.id === node.id);\n          }\n\n          if (target) {\n            edge.spline = true;\n\n            const centerX = width / 2;\n            const centerY = height / 2;\n            const middleRing = primaryRing + (secondaryRing - primaryRing) * 0.5;\n\n            const check = [\"source\", \"target\"];\n\n            check.forEach((node, i) => {\n              edge[`${node}X`] = edge[node].x + Math.cos(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}Y`] = edge[node].y + Math.sin(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}BisectX`] = centerX + middleRing * Math.cos(edge[node].radians);\n              edge[`${node}BisectY`] = centerY + middleRing * Math.sin(edge[node].radians);\n\n              edge[node] = nodes.find(n => n.id === edge[node].id);\n\n              if (edge[node].edges === undefined) edge[node].edges = {};\n\n              const oppId = i === 0 ? edge.target.id : edge.source.id;\n\n              if (edge[node].id === p.id) {\n                edge[node].edges[oppId] = {\n                  angle: p.radians + Math.PI,\n                  radius: ringWidth / 2\n                };\n              }\n              else {\n                edge[node].edges[oppId] = {\n                  angle: target.radians,\n                  radius: ringWidth / 2\n                };\n              }\n            });\n\n            edges.push(edge);\n          }\n        }\n      });\n    });\n\n    nodes.forEach(node => {\n\n      if (node.id !== this._center) {\n        const fontSize = this._shapeConfig.labelConfig.fontSize && this._shapeConfig.labelConfig.fontSize(node) || 11;\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 5;\n        const width = ringWidth - node.r;\n\n        let angle = node.radians * (180 / Math.PI);\n        let x = node.r + padding;\n        let textAnchor = \"start\";\n\n        if (angle < -90 || angle > 90) {\n          x = -node.r - width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        node.labelBounds = {\n          x,\n          y: -lineHeight / 2,\n          width,\n          height\n        };\n\n        node.rotate = angle;\n        node.textAnchor = textAnchor;\n      }\n      else {\n        node.labelBounds = {\n          x: -primaryRing / 2,\n          y: -primaryRing / 2,\n          width: primaryRing,\n          height: primaryRing\n        };\n      }\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    this._shapes.push(new shapes.Path()\n      .config(configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\"))\n      .id(d => `${d.source.id}_${d.target.id}`)\n      .d(d => d.spline ? `M${d.sourceX},${d.sourceY}C${d.sourceBisectX},${d.sourceBisectY} ${d.targetBisectX},${d.targetBisectY} ${d.targetX},${d.targetY}` : `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(edges)\n      .select(elem(\"g.d3plus-rings-links\", {parent: this._select, transition, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const that = this;\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._labelCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: d => d.data.data.id === this._center ? configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.fontColor(d) : colorLegible(configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).fill(d)),\n        fontResize: d => d.data.data.id === this._center,\n        padding: 0,\n        textAnchor: d => nodeLookup[d.data.data.id].textAnchor || configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.textAnchor,\n        verticalAlign: d => d.data.data.id === this._center ? \"middle\" : \"top\"\n      },\n      rotate: d => nodeLookup[d.id].rotate || 0,\n      select: elem(\"g.d3plus-rings-nodes\", {parent: this._select, transition, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n   @memberof Rings\n   @desc Sets the center node to be the node with the given id.\n   @param {String}\n   @chainable\n   */\n  center(_) {\n    return arguments.length ? (this._center = _, this) : this._center;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Rings\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Rings.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"links\");\n      const d = [load.bind(this), _, f, \"links\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = undefined]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Rings\n      @desc The list of nodes to be used for drawing the rings network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"nodes\");\n      const d = [load.bind(this), _, f, \"nodes\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale maximum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale maximum. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale minimum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale minimum.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale to the specified string and returns the current class instance. If *value* is not specified, returns the current size scale.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {sankey, sankeyLinkHorizontal} from \"d3-sankey\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport * as shapes from \"d3plus-shape\";\nimport {dataLoad as load, Viz} from \"d3plus-viz\";\n\n/**\n    @class Sankey\n    @extends external:Viz\n    @desc Creates a sankey visualization based on a defined set of nodes and links. [Click here](http://d3plus.org/examples/d3plus-network/sankey-diagram/) for help getting started using the Sankey class.\n*/\nexport default class Sankey extends Viz {\n\n  /**\n      @memberof Sankey\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n    super();\n    this._nodeId = accessor(\"id\");\n    this._links = accessor(\"links\");\n    this._noDataMessage = false;\n    this._nodes = accessor(\"nodes\");\n    this._nodeWidth = 30;\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i) => {\n      defaultMouseMove(d, i);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeId(d, i),\n              node = this._nodeLookup[id],\n              nodeLookup = Object.keys(this._nodeLookup).reduce((all, item) => {\n                all[this._nodeLookup[item]] = !isNaN(item) ? parseInt(item, 10) : item;\n                return all;\n              }, {});\n\n        const links = this._linkLookup[node];\n        const filterIds = [id];\n\n        links.forEach(l => {\n          filterIds.push(nodeLookup[l]);\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) {\n            return h.source.id === id || h.target.id === id;\n          }\n          else {\n            return filterIds.includes(this._nodeId(h, x));\n          }\n        });\n      }\n    };\n    this._path = sankeyLinkHorizontal();\n    this._sankey = sankey();\n    this._shape = constant(\"Rect\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Path: {\n        fill: \"none\",\n        hoverStyle: {\n          \"stroke-width\": (d, i) => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (this._value(d, i) / d.source.value) - 2)\n        },\n        label: false,\n        stroke: \"#DBDBDB\",\n        strokeOpacity: 0.5,\n        strokeWidth: (d, i) => Math.max(1, Math.abs(d.source.y1 - d.source.y0) * (this._value(d, i) / d.source.value) - 2)\n\n      },\n      Rect: {}\n    });\n    this._value = constant(1);\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const nodes = this._nodes\n      .map((n, i) => ({\n        __d3plus__: true,\n        data: n,\n        i,\n        id: this._nodeId(n, i),\n        node: n,\n        shape: \"Rect\"\n      }));\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d, i) => {\n      obj[d.id] = i;\n      return obj;\n    }, {});\n\n    const links = this._links.map((link, i) => {\n      const check = [\"source\", \"target\"];\n      const linkLookup = check.reduce((result, item) => {\n        result[item] =\n          typeof link[item] === \"number\"\n            ? nodeLookup[link[item]]\n            : nodeLookup[link[item]];\n        return result;\n      }, {});\n      return {\n        source: linkLookup.source,\n        target: linkLookup.target,\n        value: this._value(link, i)\n      };\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source]) obj[d.source] = [];\n      obj[d.source].push(d.target);\n      if (!obj[d.target]) obj[d.target] = [];\n      obj[d.target].push(d.source);\n      return obj;\n    }, {});\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n\n    this._sankey\n      .nodeWidth(this._nodeWidth)\n      .nodes(nodes)\n      .links(links)\n      .size([width, height])();\n\n    this._shapes.push(\n      new Path()\n        .config(this._shapeConfig.Path)\n        .data(links)\n        .d(this._path)\n        .select(\n          elem(\"g.d3plus-Links\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .render()\n    );\n    nest()\n      .key(d => d.shape)\n      .entries(nodes)\n      .forEach(d => {\n        this._shapes.push(\n          new shapes[d.key]()\n            .data(d.values)\n            .height(d => d.y1 - d.y0)\n            .width(d => d.x1 - d.x0)\n            .x(d => (d.x1 + d.x0) / 2)\n            .y(d => (d.y1 + d.y0) / 2)\n            .select(\n              elem(\"g.d3plus-sankey-nodes\", {\n                parent: this._select,\n                enter: {transform},\n                update: {transform}\n              }).node()\n            )\n            .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n            .render()\n        );\n      });\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Sankey\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Sankey.node) method. The `source` and `target` keys in each link need to map to the nodes in one of one way:\n1. A *String* value matching the `id` of the node.\n\nThe value passed should be an *Array* of data. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array} *links* = []\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"links\");\n      const d = [load.bind(this), _, f, \"links\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the node id accessor(s) to the specified array of values and returns the current class instance. If *value* is not specified, returns the current node group accessor.\n      @param {String} [*value* = \"id\"]\n      @chainable\n  */\n  nodeId(_) {\n    return arguments.length\n      ? (this._nodeId = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._nodeId;\n  }\n\n  /**\n      @memberof Sankey\n      @desc The list of nodes to be used for drawing the network. The value passed must be an *Array* of data.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array} *nodes* = []\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"nodes\");\n      const d = [load.bind(this), _, f, \"nodes\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the node and returns the current class instance. If *value* is not specified, returns the current nodeWidth. By default, the nodeWidth size is 30.\n      @param {Number} [*value* = 30]\n      @chainable\n  */\n  nodeWidth(_) {\n    return arguments.length ? (this._nodeWidth = _, this) : this._nodeWidth;\n  }\n\n  /**\n      @memberof Sankey\n      @desc If *value* is specified, sets the width of the links and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|Number} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n\n    return arguments.length\n      ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._value;\n  }\n}\n"],"names":["super","this","const","let","zoomTransform","constant","assign","accessor","extent","scales.scaleLinear","min","merge","shapes.pointDistance","shapes.Path","elem","nest","configPrep","load","mean","Viz","max","colorLegible","sankeyLinkHorizontal","sankey","Path"],"mappings":"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"}