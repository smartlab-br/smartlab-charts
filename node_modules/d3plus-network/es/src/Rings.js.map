{"version":3,"file":"Rings.js","sources":["../../src/Rings.js"],"sourcesContent":["/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\n\nimport {extent, max, min} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {colorLegible} from \"d3plus-color\";\nimport * as shapes from \"d3plus-shape\";\nimport {dataLoad as load, Viz} from \"d3plus-viz\";\n\n/**\n    @class Rings\n    @extends external:Viz\n    @desc Creates a ring visualization based on a defined set of nodes and edges. [Click here](http://d3plus.org/examples/d3plus-network/simple-rings/) for help getting started using the Rings class.\n*/\nexport default class Rings extends Viz {\n\n  /**\n      @memberof Rings\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._labelCutoff = 100;\n    this._links = [];\n    this._noDataMessage = false;\n    this._nodes = [];\n    this._on.mouseenter = () => {};\n    this._on[\"mouseleave.shape\"] = () => {\n      this.hover(false);\n    };\n    const defaultMouseMove = this._on[\"mousemove.shape\"];\n    this._on[\"mousemove.shape\"] = (d, i) => {\n      defaultMouseMove(d, i);\n      if (this._focus && this._focus === d.id) {\n        this.hover(false);\n        this._on.mouseenter.bind(this)(d, i);\n\n        this._focus = undefined;\n      }\n      else {\n        const id = this._nodeGroupBy && this._nodeGroupBy[this._drawDepth](d, i) ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i),\n              links = this._linkLookup[id],\n              node = this._nodeLookup[id];\n\n        const filterIds = [node.id];\n        const xDomain = [node.x - node.r, node.x + node.r],\n              yDomain = [node.y - node.r, node.y + node.r];\n\n        links.forEach(l => {\n          filterIds.push(l.id);\n          if (l.x - l.r < xDomain[0]) xDomain[0] = l.x - l.r;\n          if (l.x + l.r > xDomain[1]) xDomain[1] = l.x + l.r;\n          if (l.y - l.r < yDomain[0]) yDomain[0] = l.y - l.r;\n          if (l.y + l.r > yDomain[1]) yDomain[1] = l.y + l.r;\n        });\n\n        this.hover((h, x) => {\n          if (h.source && h.target) return h.source.id === node.id || h.target.id === node.id;\n          else return filterIds.includes(this._ids(h, x)[this._drawDepth]);\n        });\n      }\n    };\n    this._on[\"click.shape\"] = d => {\n      this._center = d.id;\n      this._draw();\n    };\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const validSize = this._size ? `, ${this._size(d, i)}` : \"\";\n        return `${this._drawLabel(d, i)}${validSize}.`;\n      },\n      labelConfig: {\n        duration: 0,\n        fontMin: 1,\n        fontResize: true,\n        labelPadding: 0,\n        textAnchor: \"middle\",\n        verticalAlign: \"middle\"\n      },\n      Path: {\n        fill: \"none\",\n        label: false,\n        stroke: \"#eee\",\n        strokeWidth: 1\n      }\n    });\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const data = this._filteredData.reduce((obj, d, i) => {\n      obj[this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    let nodes = this._nodes;\n\n    if (!this._nodes.length && this._links.length) {\n      const nodeIds = Array.from(new Set(this._links.reduce((ids, link) => ids.concat([link.source, link.target]), [])));\n      nodes = nodeIds.map(node => typeof node === \"object\" ? node : {id: node});\n    }\n\n    nodes = nodes.reduce((obj, d, i) => {\n      obj[this._nodeGroupBy ? this._nodeGroupBy[this._drawDepth](d, i) : this._id(d, i)] = d;\n      return obj;\n    }, {});\n\n    nodes = Array.from(new Set(Object.keys(data).concat(Object.keys(nodes)))).map((id, i) => {\n\n      const d = data[id],\n            n = nodes[id];\n\n      if (n === undefined) return false;\n\n      return {\n        __d3plus__: true,\n        data: d || n,\n        i, id,\n        node: n,\n        shape: d !== undefined && this._shape(d) !== undefined ? this._shape(d) : this._shape(n)\n      };\n\n    }).filter(n => n);\n\n    const nodeLookup = this._nodeLookup = nodes.reduce((obj, d) => {\n      obj[d.id] = d;\n      return obj;\n    }, {});\n\n    const links = this._links.map(link => {\n      const check = [\"source\", \"target\"];\n      return check.reduce((result, check) => {\n        result[check] = typeof link[check] === \"number\" ? nodes[link[check]] : nodeLookup[link[check].id || link[check]];\n        return result;\n      }, {});\n    });\n\n    const linkMap = links.reduce((map, link) => {\n      if (!map[link.source.id]) {\n        map[link.source.id] = [];\n      }\n      map[link.source.id].push(link);\n      if (!map[link.target.id]) {\n        map[link.target.id] = [];\n      }\n      map[link.target.id].push(link);\n      return map;\n    }, {});\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const edges = [],\n          radius = min([height, width]) / 2,\n          ringWidth = radius / 3;\n\n    const primaryRing = ringWidth,\n          secondaryRing = ringWidth * 2;\n\n    const center = nodeLookup[this._center];\n\n    center.x = width / 2;\n    center.y = height / 2;\n    center.r = this._sizeMin ? max([this._sizeMin, primaryRing * .65]) : this._sizeMax ? min([this._sizeMax, primaryRing * .65]) : primaryRing * .65;\n\n    const claimed = [center],\n          primaries = [];\n\n    linkMap[this._center].forEach(edge => {\n      const node = edge.source.id === this._center ? edge.target : edge.source;\n      node.edges = linkMap[node.id].filter(link => link.source.id !== this._center || link.target.id !== this._center);\n      node.edge = edge;\n\n      claimed.push(node);\n      primaries.push(node);\n    });\n\n    primaries.sort((a, b) => a.edges.length - b.edges.length);\n\n    const secondaries = [];\n    let totalEndNodes = 0;\n\n    primaries.forEach(p => {\n      const primaryId = p.id;\n\n      p.edges = p.edges.filter(edge => !claimed.includes(edge.source) && edge.target.id === primaryId ||\n                                       !claimed.includes(edge.target) && edge.source.id === primaryId);\n\n      totalEndNodes += p.edges.length || 1;\n\n      p.edges.forEach(edge => {\n        const {source, target} = edge;\n        const claim = target.id === primaryId ? source : target;\n        claimed.push(claim);\n      });\n    });\n\n    const tau = Math.PI * 2;\n    let offset = 0;\n\n    primaries.forEach((p, i) => {\n      const children = p.edges.length || 1;\n      const space = tau / totalEndNodes * children;\n\n      if (i === 0) {\n        offset -= space / 2;\n      }\n\n      const angle = offset + space / 2 - tau / 4;\n\n      p.radians = angle;\n      p.x = width / 2 + primaryRing * Math.cos(angle);\n      p.y = height / 2 + primaryRing * Math.sin(angle);\n\n      offset += space;\n\n      p.edges.forEach((edge, i) => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n        const s = tau / totalEndNodes;\n        const a = angle - s * children / 2 + s / 2 + s * i;\n\n        node.radians = a;\n        node.x = width / 2 + secondaryRing * Math.cos(a);\n        node.y = height / 2 + secondaryRing * Math.sin(a);\n\n        secondaries.push(node);\n      });\n    });\n\n    const primaryDistance = ringWidth / 2;\n    const secondaryDistance = ringWidth / 4;\n\n    let primaryMax = primaryDistance / 2 - 4;\n    if (primaryDistance / 2 - 4 < 8) {\n      primaryMax = min([primaryDistance / 2, 8]);\n    }\n\n    let secondaryMax = secondaryDistance / 2 - 4;\n    if (secondaryDistance / 2 - 4 < 4) {\n      secondaryMax = min([secondaryDistance / 2, 4]);\n    }\n\n    if (secondaryMax > ringWidth / 10) {\n      secondaryMax = ringWidth / 10;\n    }\n\n    if (secondaryMax > primaryMax && secondaryMax > 10) {\n      secondaryMax = primaryMax * .75;\n    }\n    if (primaryMax > secondaryMax * 1.5) {\n      primaryMax = secondaryMax * 1.5;\n    }\n\n    primaryMax = Math.floor(primaryMax);\n    secondaryMax = Math.floor(secondaryMax);\n\n    let radiusFn;\n\n    if (this._size) {\n      const domain = extent(data, d => d.size);\n\n      if (domain[0] === domain[1]) {\n        domain[0] = 0;\n      }\n\n      radiusFn = scales.scaleLinear()\n        .domain(domain)\n        .rangeRound([3, min([primaryMax, secondaryMax])]);\n\n      const val = center.size;\n      center.r = radiusFn(val);\n    }\n    else {\n      radiusFn = scales.scaleLinear()\n        .domain([1, 2])\n        .rangeRound([primaryMax, secondaryMax]);\n    }\n\n    secondaries.forEach(s => {\n      s.ring = 2;\n      const val = this._size ? s.size : 2;\n      s.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    primaries.forEach(p => {\n      p.ring = 1;\n      const val = this._size ? p.size : 1;\n      p.r = this._sizeMin ? max([this._sizeMin, radiusFn(val)]) : this._sizeMax ? min([this._sizeMax, radiusFn(val)]) : radiusFn(val);\n    });\n\n    nodes = [center].concat(primaries).concat(secondaries);\n\n    primaries.forEach(p => {\n      const check = [\"source\", \"target\"];\n      const {edge} = p;\n\n      check.forEach(node => {\n        edge[node] = nodes.find(n => n.id === edge[node].id);\n      });\n\n      edges.push(edge);\n\n      linkMap[p.id].forEach(edge => {\n        const node = edge.source.id === p.id ? edge.target : edge.source;\n\n        if (node.id !== center.id) {\n          let target = secondaries.find(s => s.id === node.id);\n\n          if (!target) {\n            target = primaries.find(s => s.id === node.id);\n          }\n\n          if (target) {\n            edge.spline = true;\n\n            const centerX = width / 2;\n            const centerY = height / 2;\n            const middleRing = primaryRing + (secondaryRing - primaryRing) * 0.5;\n\n            const check = [\"source\", \"target\"];\n\n            check.forEach((node, i) => {\n              edge[`${node}X`] = edge[node].x + Math.cos(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}Y`] = edge[node].y + Math.sin(edge[node].ring === 2 ? edge[node].radians + Math.PI : edge[node].radians) * edge[node].r;\n              edge[`${node}BisectX`] = centerX + middleRing * Math.cos(edge[node].radians);\n              edge[`${node}BisectY`] = centerY + middleRing * Math.sin(edge[node].radians);\n\n              edge[node] = nodes.find(n => n.id === edge[node].id);\n\n              if (edge[node].edges === undefined) edge[node].edges = {};\n\n              const oppId = i === 0 ? edge.target.id : edge.source.id;\n\n              if (edge[node].id === p.id) {\n                edge[node].edges[oppId] = {\n                  angle: p.radians + Math.PI,\n                  radius: ringWidth / 2\n                };\n              }\n              else {\n                edge[node].edges[oppId] = {\n                  angle: target.radians,\n                  radius: ringWidth / 2\n                };\n              }\n            });\n\n            edges.push(edge);\n          }\n        }\n      });\n    });\n\n    nodes.forEach(node => {\n\n      if (node.id !== this._center) {\n        const fontSize = this._shapeConfig.labelConfig.fontSize && this._shapeConfig.labelConfig.fontSize(node) || 11;\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 5;\n        const width = ringWidth - node.r;\n\n        let angle = node.radians * (180 / Math.PI);\n        let x = node.r + padding;\n        let textAnchor = \"start\";\n\n        if (angle < -90 || angle > 90) {\n          x = -node.r - width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        node.labelBounds = {\n          x,\n          y: -lineHeight / 2,\n          width,\n          height\n        };\n\n        node.rotate = angle;\n        node.textAnchor = textAnchor;\n      }\n      else {\n        node.labelBounds = {\n          x: -primaryRing / 2,\n          y: -primaryRing / 2,\n          width: primaryRing,\n          height: primaryRing\n        };\n      }\n    });\n\n    this._linkLookup = links.reduce((obj, d) => {\n      if (!obj[d.source.id]) obj[d.source.id] = [];\n      obj[d.source.id].push(d.target);\n      if (!obj[d.target.id]) obj[d.target.id] = [];\n      obj[d.target.id].push(d.source);\n      return obj;\n    }, {});\n\n    this._shapes.push(new shapes.Path()\n      .config(configPrep.bind(this)(this._shapeConfig, \"edge\", \"Path\"))\n      .id(d => `${d.source.id}_${d.target.id}`)\n      .d(d => d.spline ? `M${d.sourceX},${d.sourceY}C${d.sourceBisectX},${d.sourceBisectY} ${d.targetBisectX},${d.targetBisectY} ${d.targetX},${d.targetY}` : `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`)\n      .data(edges)\n      .select(elem(\"g.d3plus-rings-links\", {parent: this._select, transition, enter: {transform}, update: {transform}}).node())\n      .render());\n\n    const that = this;\n\n    const shapeConfig = {\n      label: d => nodes.length <= this._labelCutoff || (this._hover && this._hover(d) || this._active && this._active(d)) ? this._drawLabel(d.data || d.node, d.i) : false,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: d => d.data.data.id === this._center ? configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.fontColor(d) : colorLegible(configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).fill(d)),\n        fontResize: d => d.data.data.id === this._center,\n        padding: 0,\n        textAnchor: d => nodeLookup[d.data.data.id].textAnchor || configPrep.bind(that)(that._shapeConfig, \"shape\", d.key).labelConfig.textAnchor,\n        verticalAlign: d => d.data.data.id === this._center ? \"middle\" : \"top\"\n      },\n      rotate: d => nodeLookup[d.id].rotate || 0,\n      select: elem(\"g.d3plus-rings-nodes\", {parent: this._select, transition, enter: {transform}, update: {transform}}).node()\n    };\n\n    nest().key(d => d.shape).entries(nodes).forEach(d => {\n      this._shapes.push(new shapes[d.key]()\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key))\n        .config(shapeConfig)\n        .data(d.values)\n        .render());\n    });\n\n    return this;\n\n  }\n\n  /**\n   @memberof Rings\n   @desc Sets the center node to be the node with the given id.\n   @param {String}\n   @chainable\n   */\n  center(_) {\n    return arguments.length ? (this._center = _, this) : this._center;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the hover method to the specified function and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n   */\n  hover(_) {\n    this._hover = _;\n\n    this._shapes.forEach(s => s.hover(_));\n    if (this._legend) this._legendClass.hover(_);\n\n    return this;\n  }\n\n  /**\n      @memberof Rings\n      @desc A predefined *Array* of edges that connect each object passed to the [node](#Rings.node) method. The `source` and `target` keys in each link need to map to the nodes in one of three ways:\n1. The index of the node in the nodes array (as in [this](http://d3plus.org/examples/d3plus-network/getting-started/) example).\n2. The actual node *Object* itself.\n3. A *String* value matching the `id` of the node.\n\nThe value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded. An optional formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final links *Array*.\n      @param {Array|String} *links* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  links(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"links\");\n      const d = [load.bind(this), _, f, \"links\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._links;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the node group accessor(s) to the specified string, function, or array of values and returns the current class instance. This method overrides the default .groupBy() function from being used with the data passed to .nodes(). If *value* is not specified, returns the current node group accessor.\n      @param {String|Function|Array} [*value* = undefined]\n      @chainable\n  */\n  nodeGroupBy(_) {\n    if (!arguments.length) return this._nodeGroupBy;\n    if (!(_ instanceof Array)) _ = [_];\n    return this._nodeGroupBy = _.map(k => {\n      if (typeof k === \"function\") return k;\n      else {\n        if (!this._aggs[k]) {\n          this._aggs[k] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n        return accessor(k);\n      }\n    }), this;\n  }\n\n  /**\n      @memberof Rings\n      @desc The list of nodes to be used for drawing the rings network. The value passed should either be an *Array* of data or a *String* representing a filepath or URL to be loaded.\n\nAdditionally, a custom formatting function can be passed as a second argument to this method. This custom function will be passed the data that has been loaded, as long as there are no errors. This function should return the final node *Array*.\n      @param {Array|String} *nodes* = []\n      @param {Function} [*formatter*]\n      @chainable\n  */\n  nodes(_, f) {\n    if (arguments.length) {\n      const prev = this._queue.find(q => q[3] === \"nodes\");\n      const d = [load.bind(this), _, f, \"nodes\"];\n      if (prev) this._queue[this._queue.indexOf(prev)] = d;\n      else this._queue.push(d);\n      return this;\n    }\n    return this._nodes;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size accessor to the specified function or data key and returns the current class instance. If *value* is not specified, returns the current size accessor.\n      @param {Function|String} [*value*]\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale maximum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale maximum. By default, the maximum size is determined by half the distance of the two closest nodes.\n      @param {Number} [*value*]\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale minimum to the specified number and returns the current class instance. If *value* is not specified, returns the current size scale minimum.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Rings\n      @desc If *value* is specified, sets the size scale to the specified string and returns the current class instance. If *value* is not specified, returns the current size scale.\n      @param {String} [*value* = \"sqrt\"]\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n}\n"],"names":["super","this","const","let"],"mappings":"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"}