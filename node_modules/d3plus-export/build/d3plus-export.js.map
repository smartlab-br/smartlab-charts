{"version":3,"file":"d3plus-export.js","sources":["../src/svgPresets.js","../src/htmlPresets.js","../src/dom2canvas.js","../src/saveElement.js"],"sourcesContent":["/**\n    @function svgPresets\n    @desc Adds SVG default attributes to a d3 selection in order to render it properly.\n    @param {Selection} selection\n*/\nexport default function(selection) {\n\n  // sets \"stroke-width\" attribute to `0` if not defined\n  const strokeWidth = selection.attr(\"stroke-width\");\n  selection.attr(\"stroke-width\", !strokeWidth ? 0 : strokeWidth);\n\n  // if there is no stroke, set the stroke color to \"transparent\" (fixes weird text rendering)\n  if (!strokeWidth) selection.attr(\"stroke\", \"transparent\");\n\n  // sets \"fill-opacity\" attribute to `0` if fill is \"transparent\" or \"none\"\n  const transparent = [\"none\", \"transparent\"].includes(selection.attr(\"fill\"));\n  const fillOpacity = selection.attr(\"fill-opacity\");\n  selection.attr(\"fill-opacity\", transparent ? 0 : fillOpacity);\n\n  // \"aria-label\" properties interfere with text labels ¯\\_(ツ)_/¯\n  selection.attr(\"aria-label\", null);\n\n}\n","import {select} from \"d3-selection\";\n\n/**\n    @function htmlPresets\n    @desc Adds HTML default styles to a d3 selection in order to render it properly.\n    @param {Selection} selection\n*/\nexport default function(selection) {\n\n  selection.selectAll(\"*\")\n    .each(function() {\n      const tag = this.tagName.toLowerCase();\n      if (![\"option\"].includes(tag)) {\n\n        const elem = select(this);\n\n        /* forces minor unnoticible letter-spacing on any element where it is not defined to fix IE */\n        const letterSpacing = elem.style(\"letter-spacing\");\n        elem.style(\"letter-spacing\", letterSpacing === \"normal\" ? \"0.1px\" : letterSpacing);\n\n      }\n    });\n\n}\n","import html2canvas from \"html2canvas\";\nimport canvg from \"canvg-browser\";\nimport {select, selectAll} from \"d3-selection\";\n\nimport svgPresets from \"./svgPresets\";\nimport htmlPresets from \"./htmlPresets\";\n\nconst defaultOptions = {\n  background: false,\n  callback: () => {},\n  exclude: [],\n  padding: 0,\n  scale: 1\n};\n\nconst canvgOptions = {\n  ignoreMouse: true,\n  ignoreAnimation: true,\n  ignoreDimensions: true,\n  ignoreClear: true\n};\n\n/**\n    @function parseTransform\n    @desc Extracts scale, x, and y position from an elements \"transform\" attribute, respecting cross-browser render differences.\n    @param {HTMLElement} elem The element to be analyzed.\n    @private\n*/\nfunction parseTransform(elem) {\n\n  const property = select(elem).attr(\"transform\");\n  let scale = 1, x = 0, y = 0;\n  if (property) {\n    scale = property.match(/scale\\(([^a-z]+)\\)/i);\n    if (scale) scale = parseFloat(scale[1]);\n    else scale = 1;\n    const translate = property.match(/translate\\(([^a-z]+)\\)/i);\n    if (translate) {\n      [x, y] = translate[1]\n        .replace(\", \", \",\")\n        .replace(/([^a-z]),*\\s([^a-z])/gi, \"$1,$2\")\n        .split(\",\")\n        .map(d => parseFloat(d) * scale);\n    }\n  }\n  return [scale, x, y];\n\n}\n\n/**\n    @function dom2canvas\n    @desc Renders HTML/SVG elements to a shared canvas.\n    @param {HTMLElement|Object|Array} elem The element or array of elements to be rendered to a single canvas. Additionally, a complex object can be passed as an element which can contain specific other properties.\n    @param {Number} [elem.x] The x offset of the element within the rendered canvas.\n    @param {Number} [elem.y] The y offset of the element within the rendered canvas.\n    @param {Object} [options] Additional options to specify.\n    @param {String} [options.background] Background color of the rendered canvas.\n    @param {Function} [options.callback] Callback function to be passed the canvas element after rendering.\n    @param {Array} [options.excludes] An array of HTMLElement objects to be excluded from the render.\n    @param {Number} [options.height] Pixel height for the final output. If a height value has not been passed, it will be inferred from the sizing of the first DOM element passed.\n    @param {Number} [options.padding = 0] Outer padding for the final file.\n    @param {Number} [options.scale = 1] Scale for the final file.\n    @param {Number} [options.width] Pixel width for the final output. If a width value has not been passed, it will be inferred from the sizing of the first DOM element passed.\n*/\nexport default function(elem, options) {\n\n  if (!elem) return;\n  if (!(elem instanceof Array)) elem = [elem];\n\n  options = Object.assign({}, defaultOptions, options);\n  const IE = new RegExp(/(MSIE|Trident\\/|Edge\\/)/i).test(navigator.userAgent);\n  const ratio = window ? window.devicePixelRatio || 1 : 1;\n\n  let reference = elem[0];\n  if (reference.constructor === Object) reference = reference.element;\n\n  const height = options.height ||\n          parseFloat(select(reference).style(\"height\")) +\n          parseFloat(select(reference).style(\"padding-top\")) +\n          parseFloat(select(reference).style(\"padding-bottom\")),\n        width = options.width ||\n          parseFloat(select(reference).style(\"width\")) +\n          parseFloat(select(reference).style(\"padding-left\")) +\n          parseFloat(select(reference).style(\"padding-right\"));\n\n  let layerX, layerY, offsetX = 0, offsetY = 0;\n  if (reference.getBoundingClientRect) {\n    const bounds = reference.getBoundingClientRect();\n    offsetX = bounds.left;\n    offsetY = bounds.top;\n  }\n  else {\n    offsetX = reference.offsetLeft;\n    offsetY = reference.offsetTop;\n  }\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = (width + options.padding * 2) * options.scale * ratio;\n  canvas.height = (height + options.padding * 2) * options.scale * ratio;\n  canvas.style.width = (width + options.padding * 2) * options.scale;\n  canvas.style.height = (height + options.padding * 2) * options.scale;\n\n  const context = canvas.getContext(\"2d\");\n  context.scale(options.scale * ratio, options.scale * ratio);\n  context.clearRect(0, 0, canvas.width / ratio, canvas.height / ratio);\n\n  if (options.background) {\n    context.beginPath();\n    context.rect(0, 0, canvas.width / ratio, canvas.height / ratio);\n    context.fillStyle = options.background;\n    context.fill();\n  }\n\n  const layers = [];\n\n  /**\n   * Determines how a given DOM element should be rendered.\n   * @param {Object} trans ancestral transform properties\n   * @private\n   */\n  function checkRender(trans) {\n\n    const tag = (this.tagName || \"\").toLowerCase();\n    if (options.exclude.includes(this) || tag === \"foreignobject\") return;\n\n    const transform = Object.assign({}, trans);\n\n    // strips translate and scale from transform property\n    if (this.tagName) {\n\n      const opacity = select(this).attr(\"opacity\") || select(this).style(\"opacity\");\n      const display = select(this).style(\"display\");\n      const visibility = select(this).style(\"visibility\");\n      if (display === \"none\" || visibility === \"hidden\" || opacity && parseFloat(opacity) === 0) return;\n\n      const tag = this.tagName.toLowerCase();\n\n      if (tag.length && [\"defs\", \"title\", \"desc\"].includes(tag)) return;\n\n      if (tag === \"svg\") {\n\n        // do not perform this transform for SVGs nested within other SVGs\n        if (!transform.svg) {\n          const {left, top} = this.getBoundingClientRect();\n          transform.x += left - offsetX;\n          transform.y += top - offsetY;\n          transform.svg = true;\n        }\n\n        let x = select(this).attr(\"x\");\n        x = x ? parseFloat(x) * transform.scale : 0;\n        transform.x += x;\n        let y = select(this).attr(\"y\");\n        y = y ? parseFloat(y) * transform.scale : 0;\n        transform.y += y;\n        transform.clip = {\n          height: parseFloat(select(this).attr(\"height\") || select(this).style(\"height\")),\n          width: parseFloat(select(this).attr(\"width\") || select(this).style(\"width\")),\n          x, y\n        };\n      }\n      else {\n        const x = select(this).attr(\"x\");\n        if (x) transform.x += parseFloat(x) * transform.scale;\n        const y = select(this).attr(\"y\");\n        if (y) transform.y += parseFloat(y) * transform.scale;\n      }\n\n    }\n\n    if (!tag.length) {\n      const test = (this.wholeText || \"\").replace(/\\s/g, \"\");\n      if (test.length) {\n\n        const text = this.nodeValue\n          .replace(/^\\s*/, \"\")\n          .replace(/^\\n/, \"\")\n          .replace(/^\\s*/, \"\")\n          .replace(/\\n$/, \"\")\n          .replace(/\\s*$/, \"\")\n          .replace(/\\n$/, \"\");\n\n        layers.push({type: \"text\", style: this.parentNode, value: text, x: transform.x, y: transform.y});\n\n      }\n    }\n    else if (tag === \"text\") {\n      const elem = this.cloneNode(true);\n      select(elem).call(svgPresets);\n      layers.push(Object.assign({}, transform, {type: \"svg\", value: elem}));\n    }\n    else if ([\"image\", \"img\"].includes(tag)) {\n\n      const url = select(this).attr(\"href\") || select(this).attr(\"xlink:href\");\n\n      if (url.length) {\n\n        const h = parseFloat(select(this).attr(\"height\")) * transform.scale,\n              w = parseFloat(select(this).attr(\"width\")) * transform.scale;\n\n        const data = {\n          clip: transform.clip,\n          height: h,\n          loaded: false,\n          type: \"img\",\n          width: w,\n          x: transform.x,\n          y: transform.y\n        };\n        layers.push(data);\n\n        const img = new Image();\n        img.crossOrigin = \"Anonymous\";\n        img.onload = function() {\n\n          const canvas2 = document.createElement(\"canvas\");\n          const ctx2 = canvas2.getContext(\"2d\");\n          canvas2.height = h * ratio;\n          canvas2.width = w * ratio;\n          ctx2.drawImage(this, 0, 0, w * ratio, h * ratio);\n          const himg = document.createElement(\"img\");\n          himg.src = canvas2.toDataURL(\"image/png\");\n\n          data.value = himg;\n          data.loaded = true;\n\n        };\n        img.src = url;\n\n      }\n\n    }\n    else if (![\"svg\", \"g\", \"text\"].includes(tag) && !select(this).selectAll(\"svg\").size()) {\n\n      const s = options.scale * ratio;\n\n      const data = {\n        height: Math.floor(height + options.padding * 2 + offsetY),\n        loaded: false,\n        type: \"html\",\n        width: Math.floor(width + options.padding * 2 + offsetX),\n        x: Math.floor(layerX - offsetX),\n        y: Math.floor(layerY - offsetY)\n      };\n\n      const tempCanvas = document.createElement(\"canvas\");\n      tempCanvas.width = data.width * s;\n      tempCanvas.height = data.height * s;\n      tempCanvas.style.width = `${data.width * s}px`;\n      tempCanvas.style.height = `${data.height * s}px`;\n\n      const tempContext = tempCanvas.getContext(\"2d\");\n      tempContext.scale(s, s);\n\n      layers.push(data);\n\n      htmlPresets(select(this));\n\n      html2canvas(this, {\n        allowTaint: true,\n        canvas: tempCanvas,\n        letterRendering: true\n      }).then(c => {\n        data.value = c;\n        data.loaded = true;\n      });\n\n    }\n    else if (tag !== \"svg\" && this.childNodes.length > 0 && !select(this).selectAll(\"image, img, svg\").size()) {\n\n      const elem = this.cloneNode(true);\n      select(elem).selectAll(\"*\").each(function() {\n        select(this).call(svgPresets);\n        if (select(this).attr(\"opacity\") === \"0\") this.parentNode.removeChild(this);\n      });\n\n      layers.push(Object.assign({}, transform, {type: \"svg\", value: elem, tag}));\n\n    }\n    else if (this.childNodes.length > 0) {\n      const [scale, x, y] = parseTransform(this);\n      transform.scale *= scale;\n      transform.x += x;\n      transform.y += y;\n      checkChildren(this, transform);\n    }\n    else { // catches all SVG shapes\n\n      const elem = this.cloneNode(true);\n      select(elem).selectAll(\"*\").each(function() {\n        if (select(this).attr(\"opacity\") === \"0\") this.parentNode.removeChild(this);\n      });\n\n      if (tag === \"line\") {\n        select(elem).attr(\"x1\", parseFloat(select(elem).attr(\"x1\")) + transform.x);\n        select(elem).attr(\"x2\", parseFloat(select(elem).attr(\"x2\")) + transform.x);\n        select(elem).attr(\"y1\", parseFloat(select(elem).attr(\"y1\")) + transform.y);\n        select(elem).attr(\"y2\", parseFloat(select(elem).attr(\"y2\")) + transform.y);\n      }\n      else if (tag === \"path\") {\n        const [scale, x, y] = parseTransform(elem);\n        if (select(elem).attr(\"transform\")) select(elem).attr(\"transform\", `scale(${scale})translate(${x + transform.x},${y + transform.y})`);\n      }\n      select(elem).call(svgPresets);\n\n      const fill = select(elem).attr(\"fill\");\n      const defFill = fill && fill.indexOf(\"url\") === 0;\n      // if (defFill) select(elem).attr(\"fill-opacity\", 0);\n\n      layers.push(Object.assign({}, transform, {type: \"svg\", value: elem, tag}));\n      if (defFill) {\n        const def = select(fill.slice(4, -1)).node().cloneNode(true);\n        const defTag = (def.tagName || \"\").toLowerCase();\n        if (defTag === \"pattern\") {\n\n          const [scale, x, y] = parseTransform(elem);\n          transform.scale *= scale;\n          transform.x += x;\n          transform.y += y;\n          checkChildren(def, transform);\n\n        }\n      }\n\n    }\n\n  }\n\n  /**\n   * Performs \"checkRender\" on all childNodes of a DOM element (used recursively by checkRender)\n   * @param {HTMLElement} e DOM node to traverse\n   * @param {Object} trans ancestral transform properties\n   * @private\n   */\n  function checkChildren(e, trans) {\n    selectAll(e.childNodes).each(function() {\n      checkRender.bind(this)(trans);\n    });\n  }\n\n  for (let i = 0; i < elem.length; i++) {\n\n    let e = elem[i],\n        options = {scale: 1, x: 0, y: 0, svg: false};\n\n    if (e.constructor === Object) {\n      options = Object.assign(options, e);\n      e = e.element;\n    }\n    layerX = options.x;\n    layerY = options.y;\n    checkRender.bind(e)(options);\n\n  }\n\n  /**\n   * Checks the status of each render layer every 500ms, and finishes render once all are complete.\n   * @private\n   */\n  function checkStatus() {\n\n    let allDone = true;\n    for (let i = 0; i < layers.length; i++) {\n      if (layers[i].loaded === false) {\n        allDone = false;\n        break;\n      }\n    }\n\n    if (allDone) finish();\n    else setTimeout(checkStatus, 500);\n\n  }\n\n  checkStatus();\n\n  /**\n   * Finishes the render after all layers have been rendered to canvas.\n   * @private\n   */\n  function finish() {\n\n    for (let i = 0; i < layers.length; i++) {\n\n      const layer = layers[i];\n      const clip = layer.clip || {height, width, x: 0, y: 0};\n\n      switch (layer.type) {\n\n        case \"img\":\n          context.save();\n          context.beginPath();\n          context.translate(options.padding + clip.x, options.padding + clip.y);\n          context.rect(0, 0, clip.width, clip.height);\n          context.clip();\n          context.drawImage(layer.value, layer.x + clip.x, layer.y + clip.y, layer.width, layer.height);\n          context.restore();\n          break;\n\n        case \"html\":\n          context.save();\n          context.beginPath();\n          context.translate(options.padding, options.padding);\n          context.drawImage(layer.value, layer.x, layer.y, layer.width, layer.height);\n          context.restore();\n          break;\n\n        case \"text\":\n\n          const parent = select(layer.style);\n          const title = layer.value\n            .replace(/&/g, \"&amp;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n\n          const fC = parent.style(\"color\"),\n                fS = parent.style(\"font-size\");\n\n          let fF = parent.style(\"font-family\").split(\",\")[0];\n\n          if (fF.indexOf(\"'\") !== 0) fF = `'${fF}'`;\n          const text = `<text stroke='none' dy='${fS}' fill='${fC}' font-family=${fF} font-size='${fS}'>${title}</text>`;\n\n          context.save();\n          context.translate(options.padding, options.padding);\n          canvg(canvas, text, Object.assign({}, canvgOptions, {offsetX: layer.x, offsetY: layer.y}));\n          context.restore();\n\n          break;\n\n        case \"svg\":\n          const outer = IE ? (new XMLSerializer()).serializeToString(layer.value) : layer.value.outerHTML;\n          context.save();\n          context.translate(options.padding + clip.x + layer.x, options.padding + clip.y + layer.y);\n          context.rect(0, 0, clip.width, clip.height);\n          context.clip();\n          canvg(canvas, outer, Object.assign({}, canvgOptions, {offsetX: layer.x + clip.x, offsetY: layer.y + clip.y}));\n          context.restore();\n          break;\n\n        default:\n          console.warn(\"uncaught\", layer);\n          break;\n\n      }\n\n    }\n\n    options.callback(canvas);\n\n  }\n\n}\n","import \"canvas-toBlob\";\nimport {saveAs} from \"file-saver\";\n// import JsPDF from \"jspdf\";\n\nimport dom2canvas from \"./dom2canvas\";\n\nconst defaultOptions = {\n  filename: \"download\",\n  type: \"png\"\n};\n\n/**\n    @function saveElement\n    @desc Downloads an HTML Element as a bitmap PNG image.\n    @param {HTMLElement|Array} elem A single element or array of elements to be saved to one file.\n    @param {Object} [options] Additional options to specify.\n    @param {String} [options.filename = \"download\"] Filename for the downloaded file, without the extension.\n    @param {String} [options.type = \"png\"] File type of the saved document. Accepted values are `\"png\"` and `\"jpg\"`.\n    @param {Object} [renderOptions] Custom options to be passed to the dom2canvas function.\n*/\nexport default function(elem, options = {}, renderOptions = {}) {\n\n  if (!elem) return;\n  options = Object.assign({}, defaultOptions, options);\n\n  const IE = new RegExp(/(MSIE|Trident\\/|Edge\\/)/i).test(navigator.userAgent);\n\n  if (!(elem instanceof Array) && options.type === \"svg\") {\n    const outer = IE ? (new XMLSerializer()).serializeToString(elem) : elem.outerHTML;\n    saveAs(new Blob([outer], {type: \"application/svg+xml\"}), `${options.filename}.svg`);\n  }\n\n  dom2canvas(elem, Object.assign({}, renderOptions, {callback: canvas => {\n\n    if (renderOptions.callback) renderOptions.callback(canvas);\n\n    if ([\"jpg\", \"png\"].includes(options.type)) {\n      canvas.toBlob(blob => saveAs(blob, `${options.filename}.${options.type}`));\n    }\n    // else if (options.type === \"pdf\") {\n\n    //   const outputHeight = 11,\n    //         outputWidth = 8.5;\n\n    //   const aspect = canvas.width / canvas.height,\n    //         orientation = aspect > 1 ? \"landscape\" : \"portrait\";\n\n    //   const pdf = new JsPDF({\n    //     orientation,\n    //     unit: \"in\",\n    //     format: [outputWidth, outputHeight]\n    //   });\n\n    //   let h = orientation === \"landscape\" ? outputWidth : outputHeight,\n    //       left,\n    //       top,\n    //       w = orientation === \"landscape\" ? outputHeight : outputWidth;\n\n    //   const margin = 0.5;\n\n    //   if (aspect < w / h) {\n    //     h -= margin * 2;\n    //     const tempWidth = h * aspect;\n    //     top = margin;\n    //     left = (w - tempWidth) / 2;\n    //     w = tempWidth;\n    //   }\n    //   else {\n    //     w -= margin * 2;\n    //     const tempHeight = w / aspect;\n    //     left = margin;\n    //     top = (h - tempHeight) / 2;\n    //     h = tempHeight;\n    //   }\n\n    //   pdf.addImage(canvas, \"canvas\", left, top, w, h);\n    //   pdf.save(options.filename);\n\n    // }\n\n  }}));\n\n}\n"],"names":["selection","strokeWidth","attr","transparent","includes","fillOpacity","selectAll","each","tag","tagName","toLowerCase","elem","select","letterSpacing","style","defaultOptions","background","callback","exclude","padding","scale","canvgOptions","ignoreMouse","ignoreAnimation","ignoreDimensions","ignoreClear","parseTransform","property","x","y","match","parseFloat","translate","replace","split","map","d","options","Array","Object","assign","IE","RegExp","test","navigator","userAgent","ratio","window","devicePixelRatio","reference","constructor","element","height","width","layerX","layerY","offsetX","offsetY","getBoundingClientRect","bounds","left","top","offsetLeft","offsetTop","canvas","document","createElement","context","getContext","clearRect","beginPath","rect","fillStyle","fill","layers","checkRender","trans","transform","opacity","display","visibility","length","svg","clip","wholeText","text","nodeValue","push","type","parentNode","value","cloneNode","call","svgPresets","url","h","w","data","loaded","img","Image","crossOrigin","onload","canvas2","ctx2","drawImage","himg","src","toDataURL","size","s","Math","floor","tempCanvas","tempContext","htmlPresets","html2canvas","allowTaint","letterRendering","then","c","childNodes","removeChild","checkChildren","defFill","indexOf","def","slice","node","defTag","e","bind","i","checkStatus","allDone","finish","setTimeout","layer","save","restore","parent","title","fC","fS","fF","canvg","outer","XMLSerializer","serializeToString","outerHTML","console","warn","filename","renderOptions","saveAs","Blob","dom2canvas","toBlob","blob"],"mappings":"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}