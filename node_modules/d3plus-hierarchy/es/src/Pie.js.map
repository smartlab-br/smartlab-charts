{"version":3,"file":"Pie.js","sources":["../../src/Pie.js"],"sourcesContent":["import {min} from \"d3-array\";\nimport {arc, pie} from \"d3-shape\";\n\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Pie\n    @extends Viz\n    @desc Uses the [d3 pie layout](https://github.com/d3/d3-shape#pies) to creates SVG arcs based on an array of data.\n*/\nexport default class Pie extends Viz {\n\n  /**\n      @memberof Pie\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._pieData ? `${++this._pieData[i].index}. ${this._drawLabel(d, i)}, ${this._value(d, i)}.` : \"\",\n      Path: {\n        labelConfig: {\n          fontResize: true\n        }\n      }\n    });\n    this._innerRadius = 0;\n    this._padPixel = 0;\n    this._pie = pie();\n    this._sort = (a, b) => this._value(b) - this._value(a);\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const outerRadius = min([width, height]) / 2;\n\n    const pieData = this._pieData = this._pie\n      .padAngle(this._padAngle || this._padPixel / outerRadius)\n      .sort(this._sort)\n      .value(this._value)\n      (this._filteredData);\n\n    pieData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    const arcData = arc()\n      .innerRadius(this._innerRadius)\n      .outerRadius(outerRadius);\n\n    const transform = `translate(${width / 2 + this._margin.left}, ${height / 2 + this._margin.top})`;\n    this._shapes.push(new Path()\n      .data(pieData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-Pie\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the inner radius accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current inner radius accessor.\n      @param {Function|Number} [*value*]\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = _, this) : this._innerRadius;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified radian value and returns the current class instance. If *value* is not specified, returns the current radian padding.\n      @param {Number} [*value*]\n  */\n  padAngle(_) {\n    return arguments.length ? (this._padAngle = _, this) : this._padAngle;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified pixel value and returns the current class instance. If *value* is not specified, returns the current pixel padding.\n      @param {Number} [*value*]\n  */\n  padPixel(_) {\n    return arguments.length ? (this._padPixel = _, this) : this._padPixel;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *comparator* is specified, sets the sort order for the pie slices using the specified comparator function. If *comparator* is not specified, returns the current sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n}\n"],"names":["super","this","const"],"mappings":"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"}