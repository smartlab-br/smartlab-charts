{"version":3,"file":"d3plus-hierarchy.js","sources":["../src/Pie.js","../src/Donut.js","../src/nest.js","../src/Tree.js","../src/Treemap.js"],"sourcesContent":["import {min} from \"d3-array\";\nimport {arc, pie} from \"d3-shape\";\n\nimport {accessor, assign, configPrep, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Pie\n    @extends Viz\n    @desc Uses the [d3 pie layout](https://github.com/d3/d3-shape#pies) to creates SVG arcs based on an array of data.\n*/\nexport default class Pie extends Viz {\n\n  /**\n      @memberof Pie\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._pieData ? `${++this._pieData[i].index}. ${this._drawLabel(d, i)}, ${this._value(d, i)}.` : \"\",\n      Path: {\n        labelConfig: {\n          fontResize: true\n        }\n      }\n    });\n    this._innerRadius = 0;\n    this._padPixel = 0;\n    this._pie = pie();\n    this._sort = (a, b) => this._value(b) - this._value(a);\n    this._value = accessor(\"value\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const outerRadius = min([width, height]) / 2;\n\n    const pieData = this._pieData = this._pie\n      .padAngle(this._padAngle || this._padPixel / outerRadius)\n      .sort(this._sort)\n      .value(this._value)\n      (this._filteredData);\n\n    pieData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    const arcData = arc()\n      .innerRadius(this._innerRadius)\n      .outerRadius(outerRadius);\n\n    const transform = `translate(${width / 2 + this._margin.left}, ${height / 2 + this._margin.top})`;\n    this._shapes.push(new Path()\n      .data(pieData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-Pie\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the inner radius accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current inner radius accessor.\n      @param {Function|Number} [*value*]\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = _, this) : this._innerRadius;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified radian value and returns the current class instance. If *value* is not specified, returns the current radian padding.\n      @param {Number} [*value*]\n  */\n  padAngle(_) {\n    return arguments.length ? (this._padAngle = _, this) : this._padAngle;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified pixel value and returns the current class instance. If *value* is not specified, returns the current pixel padding.\n      @param {Number} [*value*]\n  */\n  padPixel(_) {\n    return arguments.length ? (this._padPixel = _, this) : this._padPixel;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *comparator* is specified, sets the sort order for the pie slices using the specified comparator function. If *comparator* is not specified, returns the current sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this) : this._value;\n  }\n}\n","import {min} from \"d3-array\";\nimport {default as Pie} from \"./Pie\";\n\n/**\n    @class Donut\n    @extends Pie\n    @desc Extends the Pie visualization to create a donut chart.\n*/\nexport default class Donut extends Pie {\n\n  /**\n      @memberof Donut\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._innerRadius = () => min([\n      this._width - this._margin.left - this._margin.right,\n      this._height - this._margin.top - this._margin.bottom\n    ]) / 4;\n    this._padPixel = 2;\n\n  }\n\n}\n","import {nest} from \"d3-collection\";\n\n/**\n    @function nest\n    @summary Extends the base behavior of d3.nest to allow for multiple depth levels.\n    @param {Array} *data* The data array to be nested.\n    @param {Array} *keys* An array of key accessors that signify each nest level.\n*/\nexport default function(data, keys) {\n\n  if (!(keys instanceof Array)) keys = [keys];\n\n  const dataNest = nest();\n  for (let i = 0; i < keys.length; i++) dataNest.key(keys[i]);\n  const nestedData = dataNest.entries(data);\n\n  return bubble(nestedData);\n\n}\n\n/**\n    Bubbles up values that do not nest to the furthest key.\n    @param {Array} *values* The \"values\" of a nest object.\n    @private\n*/\nfunction bubble(values) {\n\n  return values.map(d => {\n\n    if (d.key && d.values) {\n      if (d.values[0].key === \"undefined\") return d.values[0].values[0];\n      else d.values = bubble(d.values);\n    }\n\n    return d;\n\n  });\n\n}\n","import {extent, min, max} from \"d3-array\";\nimport {hierarchy, tree} from \"d3-hierarchy\";\nimport {scaleLinear} from \"d3-scale\";\n\nimport {assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as nest} from \"./nest\";\n\n/**\n    @class Tree\n    @extends Viz\n    @desc Uses d3's [tree layout](https://github.com/d3/d3-hierarchy#tree) to create a tidy tree chart based on an array of data.\n*/\nexport default class Tree extends Viz {\n\n  /**\n      @memberof Tree\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._orient = \"vertical\";\n    this._separation = (a, b) => a.parent === b.parent ? 1 : 2;\n\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      ariaLabel: (d, i) =>  this._treeData ? `${this._treeData[i].depth}. ${this._drawLabel(d, i)}.` : \"\",\n      labelConfig: {\n        fontColor: \"#444\"\n      },\n      Path: {\n        fill: \"none\",\n        stroke: \"#ccc\",\n        strokeWidth: 1\n      },\n      r: constant(5),\n      width: constant(10),\n      height: constant(10)\n    });\n\n    this._tree = tree();\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._orient === \"vertical\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right,\n          left = this._orient === \"vertical\" ? \"left\" : \"top\",\n          that = this,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._orient === \"horizontal\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right;\n\n    const treeData = this._treeData = this._tree\n      .separation(this._separation)\n      .size([width, height])\n      (hierarchy({\n        key: \"root\",\n        values: nest(this._filteredData, this._groupBy.slice(0, this._drawDepth + 1))\n      }, d => d.key && d.values ? d.values : null).sort(this._sort))\n      .descendants()\n      .filter(d => d.depth <= this._groupBy.length && d.parent);\n\n    /**\n        Merges the values of a given nest branch.\n        @private\n    */\n    function flattenBranchData(branch) {\n      return merge(branch.values.map(l => l.key && l.values ? flattenBranchData(l) : l), that._aggs);\n    }\n\n    treeData.forEach((d, i) => {\n      if (d.data.key && d.data.values) d.data = flattenBranchData(d.data);\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    let r = this._shapeConfig.r;\n    if (typeof r !== \"function\") r = constant(r);\n    const rBufferRoot = max(treeData, d => d.depth === 1 ? r(d.data, d.i) : 0);\n    const rBufferEnd = max(treeData, d => d.children ? 0 : r(d.data, d.i));\n\n    const yExtent = extent(treeData, d => d.y);\n    this._labelHeight = min([\n      this._orient === \"vertical\" ? 50 : 100,\n      (yExtent[1] - rBufferRoot - rBufferEnd) / (this._groupBy.length + 1)\n    ]);\n\n    this._labelWidths = nest(treeData, d => d.depth)\n      .map(d => d.values.reduce((num, v, i) => {\n        const next = i < d.values.length - 1 ? d.values[i + 1].x : width + this._margin[left],\n              prev = i ? d.values[i - 1].x : this._margin[left];\n        return min([num, next - v.x, v.x - prev]);\n      }, width));\n\n    const yScale = scaleLinear()\n      .domain(yExtent)\n      .range([rBufferRoot + this._labelHeight, height - rBufferEnd - this._labelHeight]);\n\n    treeData.forEach(d => {\n      const val = yScale(d.y);\n      if (this._orient === \"horizontal\") {\n        d.y = d.x;\n        d.x = val;\n      }\n      else d.y = val;\n    });\n\n    const elemObject = {parent: this._select, enter: {transform}, update: {transform}};\n\n    this._shapes.push(new Path()\n      .data(treeData.filter(d => d.depth > 1))\n      .select(elem(\"g.d3plus-Tree-Links\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .config({\n        d: d => {\n\n          let r = this._shapeConfig.r;\n\n          if (typeof r === \"function\") r = r(d.data, d.i);\n\n          const px = d.parent.x - d.x + (this._orient === \"vertical\" ? 0 : r),\n                py = d.parent.y - d.y + (this._orient === \"vertical\" ? r : 0),\n                x = this._orient === \"vertical\" ? 0 : -r,\n                y = this._orient === \"vertical\" ? -r : 0;\n\n          return this._orient === \"vertical\"\n            ? `M${x},${y}C${x},${(y + py) / 2} ${px},${(y + py) / 2} ${px},${py}`\n            : `M${x},${y}C${(x + px) / 2},${y} ${(x + px) / 2},${py} ${px},${py}`;\n\n        },\n        id: (d, i) => this._ids(d, i).join(\"-\")\n      })\n      .render());\n\n    this._shapes.push(new Circle()\n      .data(treeData)\n      .select(elem(\"g.d3plus-Tree-Shapes\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n      .config({\n        id: (d, i) => this._ids(d, i).join(\"-\"),\n        label: (d, i) => {\n          if (this._label) return this._label(d.data, i);\n          const ids = this._ids(d, i).slice(0, d.depth);\n          return ids[ids.length - 1];\n        },\n        labelConfig: {\n          textAnchor: d => this._orient === \"vertical\" ? \"middle\"\n          : d.data.children && d.data.depth !== this._groupBy.length ? \"end\" : \"start\",\n          verticalAlign: d => this._orient === \"vertical\" ? d.data.depth === 1 ? \"bottom\" : \"top\" : \"middle\"\n        },\n        hitArea: (d, i, s) => {\n\n          const h = this._labelHeight,\n                w = this._labelWidths[d.depth - 1];\n\n          return {\n            width: this._orient === \"vertical\" ? w : s.r * 2 + w,\n            height: this._orient === \"horizontal\" ? h : s.r * 2 + h,\n            x: this._orient === \"vertical\" ? -w / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + w) : -s.r,\n            y: this._orient === \"horizontal\" ? -h / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + this._labelHeight) : -s.r\n          };\n\n        },\n        labelBounds: (d, i, s) => {\n\n          const h = this._labelHeight,\n                height = this._orient === \"vertical\" ? \"height\" : \"width\",\n                w = this._labelWidths[d.depth - 1],\n                width = this._orient === \"vertical\" ? \"width\" : \"height\",\n                x = this._orient === \"vertical\" ? \"x\" : \"y\",\n                y = this._orient === \"vertical\" ? \"y\" : \"x\";\n\n          return {\n            [width]: w,\n            [height]: h,\n            [x]: -w / 2,\n            [y]: d.children && d.depth !== this._groupBy.length ? -(s.r + h) : s.r\n          };\n\n        }\n      })\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {String} [*value* = \"vertical\"] Accepts either \"vertical\" or \"horizontal\".\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = _, this) : this._orient;\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the separation accessor to the specified function. If *value* is not specified, returns the current separation accessor.\n\nFrom the [d3-hierarchy documentation](https://github.com/d3/d3-hierarchy#tree_separation):\n> The separation accessor is used to separate neighboring nodes. The separation function is passed two nodes a and b, and must return the desired separation. The nodes are typically siblings, though the nodes may be more distantly related if the layout decides to place such nodes adjacent.\n      @param {Function} [*value*]\n      @example\nfunction separation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n  */\n  separation(_) {\n    return arguments.length ? (this._separation = _, this) : this._separation;\n  }\n\n}\n","import {nest} from \"d3-collection\";\nimport {hierarchy, treemap, treemapSquarify} from \"d3-hierarchy\";\n\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Treemap\n    @extends Viz\n    @desc Uses the [d3 treemap layout](https://github.com/mbostock/d3/wiki/Treemap-Layout) to creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-hierarchy/getting-started/) for help getting started using the treemap generator.\n*/\nexport default class Treemap extends Viz {\n\n  /**\n      @memberof Treemap\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._layoutPadding = 1;\n    this._shapeConfig = assign({}, this._shapeConfig, {\n      ariaLabel: (d, i) => {\n        const rank = this._rankData ? `${this._rankData.indexOf(d) + 1}. ` : \"\";\n        return `${rank}${this._drawLabel(d, i)}, ${this._sum(d, i)}.`;\n      },\n      labelConfig: {\n        fontMax: 20,\n        fontResize: true,\n        padding: 15\n      }\n    });\n    this._sort = (a, b) => b.value - a.value;\n    this._sum = accessor(\"value\");\n    this._tile = treemapSquarify;\n    this._treemap = treemap().round(true);\n\n  }\n\n  /**\n      @memberof Treemap\n      @desc Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n    \n    let nestedData = nest();\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\n    nestedData = nestedData.entries(this._filteredData);\n\n    const tmapData = this._treemap\n      .padding(this._layoutPadding)\n      .size([\n        this._width - this._margin.left - this._margin.right,\n        this._height - this._margin.top - this._margin.bottom\n      ])\n      .tile(this._tile)\n      (hierarchy({values: nestedData}, d => d.values).sum(this._sum).sort(this._sort));\n\n    const shapeData = [], that = this;\n\n    /**\n        @memberof Treemap\n        @desc Flattens and merges treemap data.\n        @private\n    */\n    function extractLayout(children) {\n      for (let i = 0; i < children.length; i++) {\n        const node = children[i];\n        if (node.depth <= that._drawDepth) extractLayout(node.children);\n        else {\n          node.__d3plus__ = true;\n          node.id = node.data.key;\n          node.i = node.data.values.length === 1 && that._filteredData.includes(node.data.values[0]) ? that._filteredData.indexOf(node.data.values[0]) : undefined;\n          node.data = merge(node.data.values);\n          node.x = node.x0 + (node.x1 - node.x0) / 2;\n          node.y = node.y0 + (node.y1 - node.y0) / 2;\n          shapeData.push(node);\n        }\n      }\n    }\n    if (tmapData.children) extractLayout(tmapData.children);\n\n    this._rankData = shapeData.sort(this._sort).map(d => d.data);\n    const total = tmapData.value;\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n    this._shapes.push(new Rect()\n      .data(shapeData)\n      .label(d => [\n        this._drawLabel(d.data, d.i),\n        `${Math.round(this._sum(d.data, d.i) / total * 100)}%`\n      ])\n      .select(elem(\"g.d3plus-Treemap\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        height: d => d.y1 - d.y0,\n        labelBounds: (d, i, s) => {\n          const h = s.height;\n          const sh = Math.min(50, h * 0.25);\n          return [\n            {width: s.width, height: h - sh, x: -s.width / 2, y: -h / 2},\n            {width: s.width, height: sh, x: -s.width / 2, y: h / 2 - sh}\n          ];\n        },\n        labelConfig: {\n          textAnchor: d => d.l ? \"middle\" : \"start\",\n          verticalAlign: d => d.l ? \"bottom\" : \"top\"\n        },\n        width: d => d.x1 - d.x0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the inner and outer padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current padding accessor.\n      @param {Function|Number} [*value*]\n  */\n  layoutPadding(_) {\n    return arguments.length ? (this._layoutPadding = typeof _ === \"function\" ? _ : constant(_), this) : this._layoutPadding;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *comparator* is specified, sets the sort order for the treemap using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\n      @param {Function|Number} [*value*]\n      @example\nfunction sum(d) {\n  return d.sum;\n}\n  */\n  sum(_) {\n    return arguments.length ? (this._sum = typeof _ === \"function\" ? _ : accessor(_), this) : this._sum;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling) to the specified function and returns the current class instance. If *value* is not specified, returns the current [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling).\n      @param {Function} [*value*]\n  */\n  tile(_) {\n    return arguments.length ? (this._tile = _, this) : this._tile;\n  }\n\n}\n"],"names":["super","assign","this","pie","accessor","const","min","arc","Path","elem","configPrep","Viz","nest","let","constant","tree","hierarchy","merge","max","extent","scaleLinear","Circle","treemapSquarify","treemap","Rect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAYA,IAAqB,GAAG;IAOtB,YAAW,GAAG;;;;MAEZA,QAAK,KAAC,CAAC,CAAC;;MAER,IAAI,CAAC,YAAY,GAAGC,mBAAM,CAAC,IAAI,CAAC,YAAY,EAAE;QAC5C,SAAS,YAAG,CAAC,EAAE,CAAC,EAAE,SAAIC,MAAI,CAAC,QAAQ,KAAM,EAAEA,MAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAUA,MAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAC,WAAKA,MAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAC,UAAM,KAAE;QACzH,IAAI,EAAE;UACJ,WAAW,EAAE;YACX,UAAU,EAAE,IAAI;WACjB;SACF;OACF,CAAC,CAAC;MACH,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;MACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;MACnB,IAAI,CAAC,IAAI,GAAGC,WAAG,EAAE,CAAC;MAClB,IAAI,CAAC,KAAK,aAAI,CAAC,EAAE,CAAC,EAAE,SAAGD,MAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,MAAM,CAAC,CAAC,IAAC,CAAC;MACvD,IAAI,CAAC,MAAM,GAAGE,qBAAQ,CAAC,OAAO,CAAC,CAAC;;;;;oCACjC;;;;;;kBAMD,wBAAM,QAAQ,EAAE;;;;MAEdJ,aAAK,CAAC,UAAK,OAAC,QAAQ,CAAC,CAAC;;MAEtBK,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;YAC9D,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;;MAEnEA,IAAM,WAAW,GAAGC,WAAG,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;;MAE7CD,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI;SACtC,QAAQ,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SACxD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SAChB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;SAClB,IAAI,CAAC,aAAa,CAAC,CAAC;;MAEvB,OAAO,CAAC,OAAO,WAAE,CAAC,EAAE,CAAC,EAAE;QACrB,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACT,CAAC,CAAC;;MAEHA,IAAM,OAAO,GAAGE,WAAG,EAAE;SAClB,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC;SAC9B,WAAW,CAAC,WAAW,CAAC,CAAC;;MAE5BF,IAAM,SAAS,GAAG,gBAAa,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAI,WAAK,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAG,MAAG,CAAC;MAClG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAIG,gBAAI,EAAE;SACzB,IAAI,CAAC,OAAO,CAAC;SACb,CAAC,CAAC,OAAO,CAAC;SACV,MAAM,CAACC,iBAAI,CAAC,cAAc,EAAE;UAC3B,MAAM,EAAE,IAAI,CAAC,OAAO;UACpB,KAAK,EAAE,YAAC,SAAS,CAAC;UAClB,MAAM,EAAE,YAAC,SAAS,CAAC;SACpB,CAAC,CAAC,IAAI,EAAE,CAAC;SACT,MAAM,CAAC;UACN,EAAE,YAAE,GAAE,SAAGP,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAC;UAC/B,CAAC,EAAE,CAAC;UACJ,CAAC,EAAE,CAAC;SACL,CAAC;SACD,MAAM,CAACQ,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACjE,MAAM,EAAE,CAAC,CAAC;;MAEb,OAAO,IAAI,CAAC;MACb;;;;;;;kBAOD,oCAAY,CAAC,EAAE;MACb,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC;MAC7E;;;;;;;kBAOD,8BAAS,CAAC,EAAE;MACV,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;MACvE;;;;;;;kBAOD,8BAAS,CAAC,EAAE;MACV,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;MACvE;;;;;;;;;;;kBAWD,sBAAK,CAAC,EAAE;MACN,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;MAC/D;;;;;;;;;;;kBAWD,wBAAM,CAAC,EAAE;MACP,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAGN,qBAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;KACzG;;;IA7H8BO;;;;;;;ECJjC,IAAqB,KAAK;IAOxB,cAAW,GAAG;;;;MAEZX,WAAK,KAAC,CAAC,CAAC;;MAER,IAAI,CAAC,YAAY,eAAM,SAAGM,WAAG,CAAC;QAC5BJ,MAAI,CAAC,MAAM,GAAGA,MAAI,CAAC,OAAO,CAAC,IAAI,GAAGA,MAAI,CAAC,OAAO,CAAC,KAAK;QACpDA,MAAI,CAAC,OAAO,GAAGA,MAAI,CAAC,OAAO,CAAC,GAAG,GAAGA,MAAI,CAAC,OAAO,CAAC,MAAM;OACtD,CAAC,GAAG,IAAC,CAAC;MACP,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;;;;;;;;;IAfY;;;;;;;;ACAnC,EAAe,cAAS,IAAI,EAAE,IAAI,EAAE;;IAElC,IAAI,EAAE,IAAI,YAAY,KAAK,CAAC,IAAE,IAAI,GAAG,CAAC,IAAI,CAAC,GAAC;;IAE5CG,IAAM,QAAQ,GAAGO,iBAAI,EAAE,CAAC;IACxB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC;IAC5DR,IAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;IAE1C,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC;;GAE3B;;;;;;;EAOD,SAAS,MAAM,CAAC,MAAM,EAAE;;IAEtB,OAAO,MAAM,CAAC,GAAG,WAAC,GAAE;;MAElB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,EAAE;QACrB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,WAAW,IAAE,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAC;eAC7D,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC;OAClC;;MAED,OAAO,CAAC,CAAC;;KAEV,CAAC,CAAC;;GAEJ;;;;;;;ECvBD,IAAqB,IAAI;IAOvB,aAAW,GAAG;;;;MAEZL,QAAK,KAAC,CAAC,CAAC;;MAER,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;MAC1B,IAAI,CAAC,WAAW,aAAI,CAAC,EAAE,CAAC,EAAE,SAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,IAAC,CAAC;;MAE3D,IAAI,CAAC,MAAM,GAAGc,qBAAQ,CAAC,QAAQ,CAAC,CAAC;MACjC,IAAI,CAAC,YAAY,GAAGb,mBAAM,CAAC,IAAI,CAAC,YAAY,EAAE;QAC5C,SAAS,YAAG,CAAC,EAAE,CAAC,EAAE,SAAIC,MAAI,CAAC,SAAS,KAAMA,MAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,iBAAUA,MAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAC,UAAM,KAAE;QACnG,WAAW,EAAE;UACX,SAAS,EAAE,MAAM;SAClB;QACD,IAAI,EAAE;UACJ,IAAI,EAAE,MAAM;UACZ,MAAM,EAAE,MAAM;UACd,WAAW,EAAE,CAAC;SACf;QACD,CAAC,EAAEY,qBAAQ,CAAC,CAAC,CAAC;QACd,KAAK,EAAEA,qBAAQ,CAAC,EAAE,CAAC;QACnB,MAAM,EAAEA,qBAAQ,CAAC,EAAE,CAAC;OACrB,CAAC,CAAC;;MAEH,IAAI,CAAC,KAAK,GAAGC,gBAAI,EAAE,CAAC;;;;;;sCAErB;;;;;;mBAMD,wBAAM,QAAQ,EAAE;;;;MAEdf,aAAK,CAAC,UAAK,OAAC,QAAQ,CAAC,CAAC;;MAEtBK,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,KAAK,UAAU;gBAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;gBACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;YACxD,IAAI,GAAG,IAAI,CAAC,OAAO,KAAK,UAAU,GAAG,MAAM,GAAG,KAAK;YACnD,IAAI,GAAG,IAAI;YACX,SAAS,GAAG,gBAAa,IAAI,CAAC,OAAO,CAAC,KAAI,WAAK,IAAI,CAAC,OAAO,CAAC,IAAG,MAAG;YAClE,KAAK,GAAG,IAAI,CAAC,OAAO,KAAK,YAAY;gBACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;gBACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;;MAE/DA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK;SACzC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;SAC5B,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACrBW,qBAAS,CAAC;UACT,GAAG,EAAE,MAAM;UACX,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;SAC9E,YAAE,GAAE,SAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,OAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7D,WAAW,EAAE;SACb,MAAM,WAAC,GAAE,SAAG,CAAC,CAAC,KAAK,IAAId,MAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,SAAM,CAAC,CAAC;;;;;;MAM5D,SAAS,iBAAiB,CAAC,MAAM,EAAE;QACjC,OAAOe,kBAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,WAAC,GAAE,SAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,GAAG,IAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;OAChG;;MAED,QAAQ,CAAC,OAAO,WAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAC;QACpE,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACT,CAAC,CAAC;;MAEHJ,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;MAC5B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAE,CAAC,GAAGC,qBAAQ,CAAC,CAAC,CAAC,GAAC;MAC7CT,IAAM,WAAW,GAAGa,WAAG,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAC,CAAC,CAAC;MAC3Eb,IAAM,UAAU,GAAGa,WAAG,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAC,CAAC,CAAC;;MAEvEb,IAAM,OAAO,GAAGc,cAAM,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,IAAC,CAAC,CAAC;MAC3C,IAAI,CAAC,YAAY,GAAGb,WAAG,CAAC;QACtB,IAAI,CAAC,OAAO,KAAK,UAAU,GAAG,EAAE,GAAG,GAAG;QACtC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,UAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;OACrE,CAAC,CAAC;;MAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,QAAK,CAAC;SAC7C,GAAG,WAAC,GAAE,SAAG,CAAC,CAAC,MAAM,CAAC,MAAM,WAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;UACpCD,IAAM,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAGH,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC/E,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;UACxD,OAAOI,WAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SAC3C,EAAE,KAAK,IAAC,CAAC,CAAC;;MAEbD,IAAM,MAAM,GAAGe,mBAAW,EAAE;SACzB,MAAM,CAAC,OAAO,CAAC;SACf,KAAK,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;MAErF,QAAQ,CAAC,OAAO,WAAC,GAAE;QACjBf,IAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,IAAIH,MAAI,CAAC,OAAO,KAAK,YAAY,EAAE;UACjC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACX;eACI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC;OAChB,CAAC,CAAC;;MAEHG,IAAM,UAAU,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,YAAC,SAAS,CAAC,EAAE,MAAM,EAAE,YAAC,SAAS,CAAC,CAAC,CAAC;;MAEnF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAIG,gBAAI,EAAE;SACzB,IAAI,CAAC,QAAQ,CAAC,MAAM,WAAC,GAAE,SAAG,CAAC,CAAC,KAAK,GAAG,IAAC,CAAC,CAAC;SACvC,MAAM,CAACC,iBAAI,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;SACtD,MAAM,CAACC,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACjE,MAAM,CAAC;UACN,CAAC,YAAE,GAAE;;YAEHG,IAAI,CAAC,GAAGX,MAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;YAE5B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAC;;YAEhDG,IAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAIH,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;kBAC7D,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAIA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;kBAC7D,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;kBACxC,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;YAE/C,OAAOA,MAAI,CAAC,OAAO,KAAK,UAAU;uBAC1B,CAAC,SAAI,CAAC,SAAI,CAAC,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,EAAE,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,EAAE,SAAI,EAAE;uBAC7D,CAAC,SAAI,CAAC,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,CAAC,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,EAAE,SAAI,EAAE,SAAI,EAAE,CAAE,CAAC;;WAEzE;UACD,EAAE,YAAG,CAAC,EAAE,CAAC,EAAE,SAAGA,MAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAC;SACxC,CAAC;SACD,MAAM,EAAE,CAAC,CAAC;;MAEb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAImB,kBAAM,EAAE;SAC3B,IAAI,CAAC,QAAQ,CAAC;SACd,MAAM,CAACZ,iBAAI,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;SACvD,MAAM,CAACC,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;SACnE,MAAM,CAAC;UACN,EAAE,YAAG,CAAC,EAAE,CAAC,EAAE,SAAGR,MAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAC;UACvC,KAAK,YAAG,CAAC,EAAE,CAAC,EAAE;YACZ,IAAIA,MAAI,CAAC,MAAM,IAAE,OAAOA,MAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAC;YAC/CG,IAAM,GAAG,GAAGH,MAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9C,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;WAC5B;UACD,WAAW,EAAE;YACX,UAAU,YAAE,GAAE,SAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,QAAQ;cACrD,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,GAAG,UAAO;YAC5E,aAAa,YAAE,GAAE,SAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,QAAQ,GAAG,KAAK,GAAG,WAAQ;WACnG;UACD,OAAO,YAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;YAEjBG,IAAM,CAAC,GAAGH,MAAI,CAAC,YAAY;kBACrB,CAAC,GAAGA,MAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;YAEzC,OAAO;cACL,KAAK,EAAEA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;cACpD,MAAM,EAAEA,MAAI,CAAC,OAAO,KAAK,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;cACvD,CAAC,EAAEA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAC5G,CAAC,EAAEA,MAAI,CAAC,OAAO,KAAK,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/H,CAAC;;WAEH;UACD,WAAW,YAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;;;YAErBG,IAAM,CAAC,GAAGH,MAAI,CAAC,YAAY;kBACrB,MAAM,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,QAAQ,GAAG,OAAO;kBACzD,CAAC,GAAGA,MAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;kBAClC,KAAK,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,OAAO,GAAG,QAAQ;kBACxD,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,GAAG;kBAC3C,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;;YAElD,eAAO,EAAC,KACN,CAAC,KAAK,CAAC,GAAE,CAAC,KACV,CAAC,MAAM,CAAC,GAAE,CAAC,KACX,CAAC,CAAC,CAAC,GAAE,CAAC,CAAC,GAAG,CAAC,KACX,CAAC,CAAC,CAAC,GAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OACtE;;WAEH;SACF,CAAC;SACD,MAAM,EAAE,CAAC,CAAC;;MAEb,OAAO,IAAI,CAAC;;MAEb;;;;;;;mBAOD,0BAAO,CAAC,EAAE;MACR,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC;MACnE;;;;;;;;;;;;;;mBAcD,kCAAW,CAAC,EAAE;MACZ,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;KAC3E;;;IAlN+BS;;;;;;;ECHlC,IAAqB,OAAO;IAO1B,gBAAW,GAAG;;;;MAEZX,QAAK,KAAC,CAAC,CAAC;;MAER,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;MACxB,IAAI,CAAC,YAAY,GAAGC,mBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE;QAChD,SAAS,YAAG,CAAC,EAAE,CAAC,EAAE;UAChBI,IAAM,IAAI,GAAGH,MAAI,CAAC,SAAS,KAAMA,MAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,aAAQ,EAAE,CAAC;UACxE,aAAU,IAAI,IAAGA,MAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAC,WAAKA,MAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAC,QAAI;SAC/D;QACD,WAAW,EAAE;UACX,OAAO,EAAE,EAAE;UACX,UAAU,EAAE,IAAI;UAChB,OAAO,EAAE,EAAE;SACZ;OACF,CAAC,CAAC;MACH,IAAI,CAAC,KAAK,aAAI,CAAC,EAAE,CAAC,EAAE,SAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,QAAK,CAAC;MACzC,IAAI,CAAC,IAAI,GAAGE,qBAAQ,CAAC,OAAO,CAAC,CAAC;MAC9B,IAAI,CAAC,KAAK,GAAGkB,2BAAe,CAAC;MAC7B,IAAI,CAAC,QAAQ,GAAGC,mBAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;;;;;4CAEvC;;;;;;;sBAOD,wBAAM,QAAQ,EAAE;;;;MAEdvB,aAAK,CAAC,UAAK,OAAC,QAAQ,CAAC,CAAC;;MAEtBa,IAAI,UAAU,GAAGD,iBAAI,EAAE,CAAC;MACxB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,IAAE,UAAU,CAAC,GAAG,CAACX,MAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAC;MAC5E,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;MAEpDG,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;SAC3B,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC;SAC5B,IAAI,CAAC;UACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;UACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;SACtD,CAAC;SACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SAChBW,qBAAS,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,YAAE,GAAE,SAAG,CAAC,CAAC,SAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;MAEnFX,IAAM,SAAS,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC;;;;;;;MAOlC,SAAS,aAAa,CAAC,QAAQ,EAAE;QAC/B,KAAKQ,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UACxCR,IAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;UACzB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAE,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAC;eAC3D;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACxB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACzJ,IAAI,CAAC,IAAI,GAAGY,kBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YAC3C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;WACtB;SACF;OACF;MACD,IAAI,QAAQ,CAAC,QAAQ,IAAE,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAC;;MAExD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAC,GAAE,SAAG,CAAC,CAAC,OAAI,CAAC,CAAC;MAC7DZ,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;;MAE7BA,IAAM,SAAS,GAAG,gBAAa,IAAI,CAAC,OAAO,CAAC,KAAI,WAAK,IAAI,CAAC,OAAO,CAAC,IAAG,MAAG,CAAC;MACzE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAImB,gBAAI,EAAE;SACzB,IAAI,CAAC,SAAS,CAAC;SACf,KAAK,WAAC,GAAE,SAAG;UACVtB,MAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAACA,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG;YACnD,CAAC;SACD,MAAM,CAACO,iBAAI,CAAC,kBAAkB,EAAE;UAC/B,MAAM,EAAE,IAAI,CAAC,OAAO;UACpB,KAAK,EAAE,YAAC,SAAS,CAAC;UAClB,MAAM,EAAE,YAAC,SAAS,CAAC;SACpB,CAAC,CAAC,IAAI,EAAE,CAAC;SACT,MAAM,CAAC;UACN,MAAM,YAAE,GAAE,SAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAE;UACxB,WAAW,YAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACrBJ,IAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YACnBA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YAClC,OAAO;cACL,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;cAC5D,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;aAC7D,CAAC;WACH;UACD,WAAW,EAAE;YACX,UAAU,YAAE,GAAE,SAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAO;YACzC,aAAa,YAAE,GAAE,SAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAK;WAC3C;UACD,KAAK,YAAE,GAAE,SAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAE;SACxB,CAAC;SACD,MAAM,CAACK,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACjE,MAAM,EAAE,CAAC,CAAC;;MAEb,OAAO,IAAI,CAAC;;MAEb;;;;;;;sBAOD,wCAAc,CAAC,EAAE;MACf,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAGI,qBAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC;MACzH;;;;;;;;;;;sBAWD,sBAAK,CAAC,EAAE;MACN,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;MAC/D;;;;;;;;;;;sBAWD,oBAAI,CAAC,EAAE;MACL,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAGV,qBAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;MACrG;;;;;;;sBAOD,sBAAK,CAAC,EAAE;MACN,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;KAC/D;;;IA5JkCO;;;;;;;;;;;;;;;"}