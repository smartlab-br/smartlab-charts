{"version":3,"file":"d3plus-plot.js","sources":["../src/buffers/ordinalBuffer.js","../src/buffers/Bar.js","../src/buffers/Box.js","../src/buffers/Circle.js","../src/buffers/Line.js","../src/buffers/Rect.js","../src/Plot.js","../src/AreaPlot.js","../src/BarChart.js","../src/BoxWhisker.js","../src/BumpChart.js","../src/LinePlot.js","../src/Radar.js","../src/StackedArea.js"],"sourcesContent":["export default function(domain) {\n\n  if (domain.includes(\"d3plus-buffer-start\")) return domain;\n\n  const newDomain = [\"d3plus-buffer-start\"];\n  domain.forEach(b => {\n    newDomain.push(b);\n    newDomain.push(`d3plus-buffer-${b}`);\n  });\n\n  return newDomain;\n\n}\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\n\nimport {default as ordinalBuffer} from \"./ordinalBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => d[this._discrete])\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  if (isDiscreteX ? bMax < oppScale(0) : bMax > oppScale(0)) bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  if (isDiscreteX ? bMin > oppScale(0) : bMin < oppScale(0)) bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  const discreteScale = isDiscreteX ? x : y;\n  discreteScale.domain(ordinalBuffer(discreteScale.domain()));\n\n  return [x, y];\n\n}\n","import {max, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\n\nimport {default as ordinalBuffer} from \"./ordinalBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer = 10]\n    @private\n*/\nexport default function({data, x, y, x2, y2, buffer = 10}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const oppScale = this._discrete === \"x\" ? y : x;\n\n  const oppDomain = oppScale.domain().slice();\n\n  const isDiscreteX = this._discrete === \"x\";\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  let negVals, posVals;\n  if (this._stacked) {\n    const groupedData = nest()\n      .key(d => d[this._discrete])\n      .entries(data)\n      .map(d => d.values.map(x => x[isDiscreteX ? yKey : xKey]));\n    posVals = groupedData.map(arr => sum(arr.filter(d => d > 0)));\n    negVals = groupedData.map(arr => sum(arr.filter(d => d < 0)));\n  }\n  else {\n    posVals = data.map(d => d[isDiscreteX ? yKey : xKey]);\n    negVals = posVals;\n  }\n\n  let bMax = oppScale(max(posVals));\n  bMax += isDiscreteX ? -buffer : buffer;\n  bMax = oppScale.invert(bMax);\n\n  let bMin = oppScale(min(negVals));\n  bMin += isDiscreteX ? buffer : -buffer;\n  bMin = oppScale.invert(bMin);\n\n  if (bMax > oppDomain[1]) oppDomain[1] = bMax;\n  if (bMin < oppDomain[0]) oppDomain[0] = bMin;\n\n  if (isDiscreteX) oppDomain.reverse();\n\n  oppScale.domain(oppDomain);\n\n  const discreteScale = isDiscreteX ? x : y;\n  discreteScale.domain(ordinalBuffer(discreteScale.domain()));\n\n  return [x, y];\n\n}\n","import {default as ordinalBuffer} from \"./ordinalBuffer\";\n\n/**\n    Adds a buffer to either side of the non-discrete axis.\n    @param {Array} data\n    @param {D3Scale} x\n    @param {D3Scale} y\n    @param {Object} [config]\n    @param {Number} [buffer] Defaults to the radius of the largest Circle.\n    @private\n*/\nexport default function({data, x, y, x2, y2, config, buffer}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert) xD = ordinalBuffer(xD);\n  if (!y.invert) yD = ordinalBuffer(yD);\n\n  data.forEach(d => {\n\n    const s = buffer ? buffer : config.r(d.data, d.i) * 2;\n\n    if (x.invert && x(d[xKey]) - xR[0] < s) {\n      const v = x.invert(x(d[xKey]) - s);\n      if (v < xD[0]) xD[0] = v;\n    }\n    if (x.invert && xR[1] - x(d[xKey]) < s) {\n      const v = x.invert(x(d[xKey]) + s);\n      if (v > xD[1]) xD[1] = v;\n    }\n\n    if (y.invert && y(d[yKey]) - yR[0] < s) {\n      const v = y.invert(y(d[yKey]) - s);\n      if (v > yD[0]) yD[0] = v;\n    }\n    if (y.invert && yR[1] - y(d[yKey]) < s) {\n      const v = y.invert(y(d[yKey]) + s);\n      if (v < yD[1]) yD[1] = v;\n    }\n\n  });\n\n  x.domain(xD).range(xR);\n  y.domain(yD).range(yR);\n\n  return [x, y];\n\n}\n","import {max} from \"d3-array\";\n\nexport default function({data, x, y, x2, y2}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  const s = this._discrete === \"x\" ? y : x;\n\n  const d = s.domain().slice();\n\n  if (this._discrete === \"x\") d.reverse();\n\n  const vals = data.map(d => d[this._discrete === \"x\" ? yKey : xKey]);\n  const b = s.invert(s(max(vals)) + (this._discrete === \"x\" ? -10 : 10));\n\n  if (b > d[1]) d[1] = b;\n\n  if (this._discrete === \"x\") d.reverse();\n\n  s.domain(d);\n\n  return [x, y];\n\n}\n","import {default as ordinalBuffer} from \"./ordinalBuffer\";\n\nexport default function({data, x, y, x2, y2, config}) {\n  const xKey = x2 ? \"x2\" : \"x\";\n  const yKey = y2 ? \"y2\" : \"y\";\n\n  let xD = x.domain().slice(),\n      yD = y.domain().slice();\n\n  const xR = x.range(),\n        yR = y.range();\n\n  if (!x.invert) xD = ordinalBuffer(xD);\n  if (!y.invert) yD = ordinalBuffer(yD);\n\n  data.forEach(d => {\n\n    const h = config.height(d.data, d.i),\n          w = config.width(d.data, d.i);\n\n    if (x.invert && x(d[xKey]) - xR[0] < w) {\n      const v = x.invert(x(d[xKey]) - w);\n      if (v < xD[0]) xD[0] = v;\n    }\n    if (x.invert && xR[1] - x(d[xKey]) < w) {\n      const v = x.invert(x(d[xKey]) + w);\n      if (v > xD[1]) xD[1] = v;\n    }\n\n    if (y.invert && y(d[yKey]) - yR[0] < h) {\n      const v = y.invert(y(d[yKey]) - h);\n      if (v > yD[0]) yD[0] = v;\n    }\n    if (y.invert && yR[1] - y(d[yKey]) < h) {\n      const v = y.invert(y(d[yKey]) + h);\n      if (v < yD[1]) yD[1] = v;\n    }\n\n  });\n\n  x.domain(xD);\n  y.domain(yD);\n\n  return [x, y];\n\n}\n","import {extent, max, merge, min, range, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport * as scales from \"d3-scale\";\nimport * as d3Shape from \"d3-shape\";\n\nimport {AxisBottom, AxisLeft, AxisRight, AxisTop, date} from \"d3plus-axis\";\nimport {colorAssign} from \"d3plus-color\";\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport * as shapes from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as BarBuffer} from \"./buffers/Bar.js\";\nimport {default as BoxBuffer} from \"./buffers/Box.js\";\nimport {default as CircleBuffer} from \"./buffers/Circle.js\";\nimport {default as LineBuffer} from \"./buffers/Line.js\";\nimport {default as RectBuffer} from \"./buffers/Rect.js\";\n\nfunction defaultSize(d) {\n  return this._sizeScaleD3(this._size ? this._size(d) : null);\n}\n\n/**\n    @class Plot\n    @extends Viz\n    @desc Creates an x/y plot based on an array of data.\n*/\nexport default class Plot extends Viz {\n\n  /**\n      @memberof Plot\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._annotations = [];\n    this._barPadding = 0;\n    this._buffer = {\n      Bar: BarBuffer,\n      Box: BoxBuffer,\n      Circle: CircleBuffer,\n      Line: LineBuffer,\n      Rect: RectBuffer\n    };\n    this._confidenceConfig = {\n      fillOpacity: constant(0.5)\n    };\n    this._groupPadding = 5;\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Area: {\n        label: (d, i) => this._stacked ? this._drawLabel(d, i) : false,\n        labelConfig: {\n          fontResize: true\n        }\n      },\n      ariaLabel: (d, i) => {\n        let ariaLabelStr = \"\";\n        if (d.nested) ariaLabelStr = `${this._drawLabel(d.data, d.i)}`;\n        else {\n          ariaLabelStr = `${this._drawLabel(d, i)}`;\n          if (this._x(d, i) !== undefined) ariaLabelStr += `, x: ${this._x(d, i)}`;\n          if (this._y(d, i) !== undefined) ariaLabelStr += `, y: ${this._y(d, i)}`;\n          if (this._x2(d, i) !== undefined) ariaLabelStr += `, x2: ${this._x2(d, i)}`;\n          if (this._y2(d, i) !== undefined) ariaLabelStr += `, y2: ${this._y2(d, i)}`;\n        }\n        return `${ariaLabelStr}.`;\n      },\n      Bar: {\n        labelConfig: {\n          textAnchor: () => this._discrete === \"x\" ? \"middle\" : \"end\",\n          verticalAlign: () => this._discrete === \"x\" ? \"top\" : \"middle\"\n        }\n      },\n      Circle: {\n        r: defaultSize.bind(this)\n      },\n      Line: {\n        fill: constant(\"none\"),\n        label: false,\n        stroke: (d, i) => colorAssign(this._id(d, i)),\n        strokeWidth: constant(1)\n      },\n      Rect: {\n        height: d => defaultSize.bind(this)(d) * 2,\n        width: d => defaultSize.bind(this)(d) * 2\n      }\n    });\n    this._shapeOrder = [\"Area\", \"Path\", \"Bar\", \"Box\", \"Line\", \"Rect\", \"Circle\"];\n    this._shapeSort = (a, b) => this._shapeOrder.indexOf(a) - this._shapeOrder.indexOf(b);\n    this._sizeMax = 20;\n    this._sizeMin = 5;\n    this._sizeScale = \"sqrt\";\n    this._stackOffset = d3Shape.stackOffsetDiverging;\n    this._stackOrder = d3Shape.stackOrderNone;\n    this._x = accessor(\"x\");\n    this._x2 = accessor(\"x2\");\n    this._xAxis = new AxisBottom().align(\"end\");\n    this._x2Axis = new AxisTop().align(\"start\");\n    this._xTest = new AxisBottom().align(\"end\").gridSize(0);\n    this._x2Test = new AxisTop().align(\"start\").gridSize(0);\n    this._xConfig = {};\n    this._x2Config = {\n      padding: 0\n    };\n    this._y = accessor(\"y\");\n    this._y2 = accessor(\"y2\");\n    this._yAxis = new AxisLeft().align(\"start\");\n    this._yTest = new AxisLeft().align(\"start\").gridSize(0);\n    this._y2Axis = new AxisRight().align(\"end\");\n    this._y2Test = new AxisLeft().align(\"end\").gridSize(0);\n    this._yConfig = {\n      gridConfig: {\n        stroke: d => {\n          const domain = this._yAxis.domain();\n          return domain[domain.length - 1] === d.id ? \"transparent\" : \"#ccc\";\n        }\n      }\n    };\n    this._y2Config = {};\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    if (!this._filteredData.length) return this;\n\n    const stackGroup = (d, i) => this._stacked\n      ? `${this._groupBy.length > 1 ? this._ids(d, i).slice(0, -1).join(\"_\") : \"group\"}`\n      : `${this._ids(d, i).join(\"_\")}`;\n\n    let data = this._filteredData.map((d, i) => ({\n      __d3plus__: true,\n      data: d,\n      group: stackGroup(d, i),\n      i,\n      hci: this._confidence && this._confidence[1] && this._confidence[1](d, i),\n      id: this._ids(d, i).slice(0, this._drawDepth + 1).join(\"_\"),\n      lci: this._confidence && this._confidence[0] && this._confidence[0](d, i),\n      shape: this._shape(d, i),\n      x: this._x(d, i),\n      x2: this._x2(d, i),\n      y: this._y(d, i),\n      y2: this._y2(d, i)\n    }));\n\n    this._formattedData = data;\n\n    if (this._size) {\n      const rExtent = extent(data, d => this._size(d.data));\n      this._sizeScaleD3 = () => this._sizeMin;\n      this._sizeScaleD3 = scales[`scale${this._sizeScale.charAt(0).toUpperCase()}${this._sizeScale.slice(1)}`]()\n        .domain(rExtent)\n        .range([rExtent[0] === rExtent[1] ? this._sizeMax : min([this._sizeMax / 2, this._sizeMin]), this._sizeMax]);\n    }\n    else {\n      this._sizeScaleD3 = () => this._sizeMin;\n    }\n\n    const x2Exists = data.some(d => d.x2 !== undefined),\n          y2Exists = data.some(d => d.y2 !== undefined);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          opp = this._discrete ? this._discrete === \"x\" ? \"y\" : \"x\" : undefined,\n          opp2 = this._discrete ? this._discrete === \"x\" ? \"y2\" : \"x2\" : undefined,\n          opps = [opp, opp2],\n          parent = this._select,\n          transition = this._transition,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const x2Time = this._time && data[0].x2 === this._time(data[0].data, data[0].i),\n          xTime = this._time && data[0].x === this._time(data[0].data, data[0].i),\n          y2Time = this._time && data[0].y2 === this._time(data[0].data, data[0].i),\n          yTime = this._time && data[0].y === this._time(data[0].data, data[0].i);\n\n    for (let i = 0; i < data.length; i++) {\n      const d = data[i];\n      if (xTime) d.x = date(d.x);\n      if (x2Time) d.x2 = date(d.x2);\n      if (yTime) d.y = date(d.y);\n      if (y2Time) d.y2 = date(d.y2);\n      d.discrete = d.shape === \"Bar\" ? `${d[this._discrete]}_${d.group}` : `${d[this._discrete]}`;\n    }\n\n    let discreteKeys, domains, stackData, stackKeys;\n    if (this._stacked) {\n\n      const groupValues = nest()\n        .key(d => d.group)\n        .entries(data)\n        .reduce((obj, d) => {\n          if (!obj[d.key]) obj[d.key] = 0;\n          obj[d.key] += sum(d.values, dd => dd[opp]);\n          return obj;\n        }, {});\n\n      data = data.sort((a, b) => {\n        if (this[`_${this._discrete}Sort`]) return this[`_${this._discrete}Sort`](a.data, b.data);\n        const a1 = a[this._discrete], b1 = b[this._discrete];\n        if (a1 - b1 !== 0) return a1 - b1;\n        if (a.group !== b.group) return groupValues[b.group] - groupValues[a.group];\n        return b[opp] - a[opp];\n      });\n\n      discreteKeys = Array.from(new Set(data.map(d => d.discrete)));\n      stackKeys = Array.from(new Set(data.map(d => d.id)));\n\n      stackData = nest()\n        .key(d => d.discrete)\n        .entries(data)\n        .map(d => d.values);\n\n      stackData.forEach(g => {\n        const ids = Array.from(new Set(g.map(d => d.id)));\n        if (ids.length < stackKeys.length) {\n          stackKeys.forEach(k => {\n            if (!ids.includes(k)) {\n              const d = data.filter(d => d.id === k)[0];\n              if (d.shape === \"Area\") {\n                const group = stackGroup(d.data, d.i);\n                const fillerPoint = {\n                  __d3plus__: true,\n                  data: d.data,\n                  discrete: d.shape === \"Bar\" ? `${g[0][this._discrete]}_${group}` : `${g[0][this._discrete]}`,\n                  group,\n                  id: k,\n                  shape: d.shape,\n                  [this._discrete]: g[0][this._discrete],\n                  [opp]: 0\n                };\n                data.push(fillerPoint);\n              }\n            }\n          });\n        }\n      });\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[this._discrete] - b[this._discrete]);\n      }\n      const order = this._stackOrder;\n\n      if (order instanceof Array) stackKeys.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n      else if (order === d3Shape.stackOrderNone) stackKeys.sort((a, b) => a.localeCompare(b));\n\n      stackData = d3Shape.stack()\n        .keys(stackKeys)\n        .offset(this._stackOffset)\n        .order(order instanceof Array ? d3Shape.stackOrderNone : order)\n        .value((group, key) => {\n          const d = group.filter(g => g.id === key);\n          return d.length ? d[0][opp] : 0;\n        })(stackData);\n\n      domains = {\n        [this._discrete]: extent(data, d => d[this._discrete]),\n        [opp]: [min(stackData.map(g => min(g.map(p => p[0])))), max(stackData.map(g => max(g.map(p => p[1]))))]\n      };\n\n    }\n    else {\n      const xData = this._discrete === \"x\" ? data.map(d => d.x) : data.map(d => d.x)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const x2Data = this._discrete === \"x\" ? data.map(d => d.x2) : data.map(d => d.x2)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const yData = this._discrete === \"y\" ? data.map(d => d.y) : data.map(d => d.y)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      const y2Data = this._discrete === \"y\" ? data.map(d => d.y2) : data.map(d => d.y2)\n        .concat(this._confidence && this._confidence[0] ? data.map(d => d.lci) : [])\n        .concat(this._confidence && this._confidence[1] ? data.map(d => d.hci) : []);\n\n      if (this[`_${this._discrete}Sort`]) {\n        data.sort((a, b) => this[`_${this._discrete}Sort`](a.data, b.data));\n      }\n      else {\n        data.sort((a, b) => a[this._discrete] - b[this._discrete]);\n      }\n\n      domains = {\n        x: this._xSort ? Array.from(new Set(data.filter(d => d.x).sort((a, b) => this._xSort(a.data, b.data)).map(d => d.x))) : extent(xData, d => d),\n        x2: this._x2Sort ? Array.from(new Set(data.filter(d => d.x2).sort((a, b) => this._x2Sort(a.data, b.data)).map(d => d.x2))) : extent(x2Data, d => d),\n        y: this._ySort ? Array.from(new Set(data.filter(d => d.y).sort((a, b) => this._ySort(a.data, b.data)).map(d => d.y))) : extent(yData, d => d),\n        y2: this._y2Sort ? Array.from(new Set(data.filter(d => d.y2).sort((a, b) => this._y2Sort(a.data, b.data)).map(d => d.y2))) : extent(y2Data, d => d)\n      };\n    }\n\n    let xDomain = this._xDomain ? this._xDomain.slice() : domains.x,\n        xScale = this._xSort ? \"Ordinal\" : \"Linear\";\n\n    if (xDomain[0] === void 0) xDomain[0] = domains.x[0];\n    if (xDomain[1] === void 0) xDomain[1] = domains.x[1];\n\n    if (xTime) {\n      xDomain = xDomain.map(date);\n      xScale = \"Time\";\n    }\n    else if (this._discrete === \"x\") {\n      xDomain = Array.from(new Set(data.filter(d => d.x).sort((a, b) => this._xSort ? this._xSort(a.data, b.data) : a.x - b.x).map(d => d.x)));\n      xScale = \"Ordinal\";\n    }\n\n    let x2Domain = this._x2Domain ? this._x2Domain.slice() : domains.x2,\n        x2Scale = this._x2Sort ? \"Ordinal\" : \"Linear\";\n\n    if (x2Domain && x2Domain[0] === void 0) x2Domain[0] = domains.x2[0];\n    if (x2Domain && x2Domain[1] === void 0) x2Domain[1] = domains.x2[1];\n\n    if (x2Time) {\n      x2Domain = x2Domain.map(date);\n      x2Scale = \"Time\";\n    }\n    else if (this._discrete === \"x\") {\n      x2Domain = Array.from(new Set(data.filter(d => d.x2).sort((a, b) => this._x2Sort ? this._x2Sort(a.data, b.data) : a.x2 - b.x2).map(d => d.x2)));\n      x2Scale = \"Ordinal\";\n    }\n\n    let yDomain = this._yDomain ? this._yDomain.slice() : domains.y,\n        yScale = this._ySort ? \"Ordinal\" : \"Linear\";\n\n    if (yDomain[0] === void 0) yDomain[0] = domains.y[0];\n    if (yDomain[1] === void 0) yDomain[1] = domains.y[1];\n\n    let y2Domain = this._y2Domain ? this._y2Domain.slice() : domains.y2,\n        y2Scale = this._y2Sort ? \"Ordinal\" : \"Linear\";\n\n    if (y2Domain && y2Domain[0] === void 0) y2Domain[0] = domains.y2[0];\n    if (y2Domain && y2Domain[1] === void 0) y2Domain[1] = domains.y2[1];\n\n    if (yTime) {\n      yDomain = yDomain.map(date);\n      yScale = \"Time\";\n    }\n    else if (this._discrete === \"y\") {\n      yDomain = Array.from(new Set(data.sort((a, b) => this._ySort ? this._ySort(a.data, b.data) : a.y - b.y).map(d => d.y)));\n      yScale = \"Ordinal\";\n\n      y2Domain = Array.from(new Set(data.sort((a, b) => this._y2Sort ? this._y2Sort(a.data, b.data) : a.y2 - b.y2).map(d => d.y2)));\n      y2Scale = \"Ordinal\";\n    }\n\n    if (y2Time) {\n      y2Domain = y2Domain.map(date);\n      y2Scale = \"Time\";\n    }\n\n    domains = {x: xDomain, x2: x2Domain || xDomain, y: yDomain, y2: y2Domain || yDomain};\n\n    opps.forEach(opp => {\n      if (opp && this._baseline !== void 0) {\n        const b = this._baseline;\n        if (domains[opp] && domains[opp][0] > b) domains[opp][0] = b;\n        else if (domains[opp] && domains[opp][1] < b) domains[opp][1] = b;\n      }\n    });\n\n    let x = scales[`scale${xScale}`]().domain(domains.x).range(range(0, width + 1, width / (domains.x.length - 1))),\n        x2 = scales[`scale${x2Scale}`]().domain(domains.x2).range(range(0, width + 1, width / (domains.x2.length - 1))),\n        y = scales[`scale${yScale}`]().domain(domains.y.reverse()).range(range(0, height + 1, height / (domains.y.length - 1))),\n        y2 = scales[`scale${y2Scale}`]().domain(domains.y2.reverse()).range(range(0, height + 1, height / (domains.y2.length - 1)));\n\n    const shapeData = nest()\n      .key(d => d.shape)\n      .entries(data)\n      .sort((a, b) => this._shapeSort(a.key, b.key));\n\n    const oppScale = this._discrete === \"x\" ? yScale : xScale;\n    if (this._xConfig.scale !== \"log\" && this._yConfig.scale !== \"log\" && oppScale !== \"Ordinal\") {\n      shapeData.forEach(d => {\n        if (this._buffer[d.key]) {\n          const res = this._buffer[d.key].bind(this)({data: d.values, x, y, config: this._shapeConfig[d.key]});\n          if (this._xConfig.scale !== \"log\") x = res[0];\n          if (this._yConfig.scale !== \"log\") y = res[1];\n          const res2 = this._buffer[d.key].bind(this)({data: d.values, x: x2, y: y2, x2: true, y2: true, config: this._shapeConfig[d.key]});\n          if (this._x2Config.scale !== \"log\") x2 = res2[0];\n          if (this._y2Config.scale !== \"log\") y2 = res2[1];\n        }\n      });\n    }\n    xDomain = x.domain();\n    x2Domain = x2.domain();\n    yDomain = y.domain();\n    y2Domain = y2.domain();\n\n    const testGroup = elem(\"g.d3plus-plot-test\", {enter: {opacity: 0}, parent: this._select}),\n          x2Ticks = this._discrete === \"x\" && !x2Time ? domains.x2 : undefined,\n          xTicks = this._discrete === \"x\" && !xTime ? domains.x : undefined,\n          y2Ticks = this._discrete === \"y\" && !y2Time ? domains.y2 : undefined,\n          yTicks = this._discrete === \"y\" && !yTime ? domains.y : undefined;\n\n    const yC = {\n      gridConfig: {stroke: !this._discrete || this._discrete === \"x\" ? this._yTest.gridConfig().stroke : \"transparent\"}\n    };\n\n    const defaultConfig = {\n      barConfig: {\"stroke-width\": 0},\n      gridSize: 0,\n      labels: [],\n      title: false,\n      tickSize: 0\n    };\n\n    const defaultX2Config = x2Exists ? {} : defaultConfig;\n    const defaultY2Config = y2Exists ? {} : defaultConfig;\n\n    this._yTest\n      .domain(yDomain)\n      .height(height)\n      .maxSize(width / 2)\n      .range([undefined, undefined])\n      .scale(yScale.toLowerCase())\n      .select(testGroup.node())\n      .ticks(yTicks)\n      .width(width)\n      .config(yC)\n      .config(this._yConfig)\n      .render();\n\n    let yBounds = this._yTest.outerBounds();\n    let yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n\n    if (y2Exists) {\n      this._y2Test\n        .domain(y2Domain)\n        .height(height)\n        .range([undefined, undefined])\n        .scale(y2Scale.toLowerCase())\n        .select(testGroup.node())\n        .ticks(y2Ticks)\n        .width(width)\n        .config(yC)\n        .config(defaultY2Config)\n        .config(this._y2Config)\n        .render();\n    }\n\n    let y2Bounds = this._y2Test.outerBounds();\n    let y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n\n    const xC = {\n      gridConfig: {stroke: !this._discrete || this._discrete === \"y\" ? this._xTest.gridConfig().stroke : \"transparent\"}\n    };\n\n    this._xTest\n      .domain(xDomain)\n      .height(height)\n      .maxSize(height / 2)\n      .range([undefined, undefined])\n      .scale(xScale.toLowerCase())\n      .select(testGroup.node())\n      .ticks(xTicks)\n      .width(width)\n      .config(xC)\n      .config(this._xConfig)\n      .render();\n\n    if (x2Exists) {\n      this._x2Test\n        .domain(x2Domain)\n        .height(height)\n        .range([undefined, undefined])\n        .scale(x2Scale.toLowerCase())\n        .select(testGroup.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .tickSize(0)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .render();\n    }\n\n    const xTestRange = this._xTest._getRange();\n    const x2TestRange = this._x2Test._getRange();\n\n    const x2Bounds = this._x2Test.outerBounds();\n    const x2Height = x2Bounds.height + this._x2Test.padding();\n\n    let xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    this._xTest\n      .range([xOffsetLeft, undefined])\n      .render();\n\n    const topOffset = this._yTest.shapeConfig().labelConfig.fontSize() / 2;\n\n    let xOffsetRight = max([y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n    const xBounds = this._xTest.outerBounds();\n    const xHeight = xBounds.height + this._xTest.padding();\n\n    this._padding.left += xOffsetLeft;\n    this._padding.right += xOffsetRight;\n    this._padding.bottom += xHeight;\n    this._padding.top += x2Height + topOffset;\n\n    super._draw(callback);\n\n    const horizontalMargin = this._margin.left + this._margin.right;\n    const verticalMargin = this._margin.top + this._margin.bottom;\n    this._yTest\n      .domain(yDomain)\n      .height(height)\n      .maxSize(width / 2)\n      .range([x2Height, height - (xHeight + topOffset + verticalMargin)])\n      .scale(yScale.toLowerCase())\n      .select(testGroup.node())\n      .ticks(yTicks)\n      .width(width)\n      .config(yC)\n      .config(this._yConfig)\n      .render();\n\n    yBounds = this._yTest.outerBounds();\n    yWidth = yBounds.width ? yBounds.width + this._yTest.padding() : undefined;\n    xOffsetLeft = max([yWidth, xTestRange[0], x2TestRange[0]]);\n\n    if (y2Exists) {\n      this._y2Test\n        .config(yC)\n        .domain(y2Domain)\n        .gridSize(0)\n        .height(height)\n        .range([x2Height, height - (xHeight + topOffset + verticalMargin)])\n        .scale(y2Scale.toLowerCase())\n        .select(testGroup.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .render();\n    }\n\n    y2Bounds = this._y2Test.outerBounds();\n    y2Width = y2Bounds.width ? y2Bounds.width + this._y2Test.padding() : undefined;\n    xOffsetRight = max([y2Width, width - xTestRange[1], width - x2TestRange[1]]);\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top + x2Height + topOffset})`;\n    const x2Transform = `translate(${this._margin.left}, ${this._margin.top + topOffset})`;\n\n    const xGroup = elem(\"g.d3plus-plot-x-axis\", {parent, transition, enter: {transform}, update: {transform}});\n    const x2Group = elem(\"g.d3plus-plot-x2-axis\", {parent, transition, enter: {transform: x2Transform}, update: {transform: x2Transform}});\n\n    const xTrans = xOffsetLeft > yWidth ? xOffsetLeft - yWidth : 0;\n    const yTransform = `translate(${this._margin.left + xTrans}, ${this._margin.top + topOffset})`;\n    const yGroup = elem(\"g.d3plus-plot-y-axis\", {parent, transition, enter: {transform: yTransform}, update: {transform: yTransform}});\n\n    const y2Transform = `translate(-${this._margin.right}, ${this._margin.top + topOffset})`;\n    const y2Group = elem(\"g.d3plus-plot-y2-axis\", {parent, transition, enter: {transform: y2Transform}, update: {transform: y2Transform}});\n\n    this._xAxis\n      .domain(xDomain)\n      .height(height - (x2Height + topOffset + verticalMargin))\n      .maxSize(height / 2)\n      .range([xOffsetLeft, width - (xOffsetRight + horizontalMargin)])\n      .scale(xScale.toLowerCase())\n      .select(xGroup.node())\n      .ticks(xTicks)\n      .width(width)\n      .config(xC)\n      .config(this._xConfig)\n      .render();\n\n    if (x2Exists) {\n      this._x2Axis\n        .domain(x2Domain)\n        .height(height - (xHeight + topOffset + verticalMargin))\n        .range([xOffsetLeft, width - (xOffsetRight + horizontalMargin)])\n        .scale(x2Scale.toLowerCase())\n        .select(x2Group.node())\n        .ticks(x2Ticks)\n        .width(width)\n        .config(xC)\n        .config(defaultX2Config)\n        .config(this._x2Config)\n        .render();\n    }\n\n    x = (d, x) => {\n      if (x === \"x2\") {\n        if (this._x2Config.scale === \"log\" && d === 0) d = x2Domain[0] < 0 ? -1 : 1;\n        return this._x2Axis._getPosition.bind(this._x2Axis)(d);\n      }\n      else {\n        if (this._xConfig.scale === \"log\" && d === 0) d = xDomain[0] < 0 ? -1 : 1;\n        return this._xAxis._getPosition.bind(this._xAxis)(d);\n      }\n    };\n    const xRange = this._xAxis._getRange();\n\n    this._yAxis\n      .domain(yDomain)\n      .height(height)\n      .maxSize(width / 2)\n      .range([this._xAxis.outerBounds().y + x2Height, height - (xHeight + topOffset + verticalMargin)])\n      .scale(yScale.toLowerCase())\n      .select(yGroup.node())\n      .ticks(yTicks)\n      .width(xRange[xRange.length - 1])\n      .config(yC)\n      .config(this._yConfig)\n      .render();\n\n    if (y2Exists) {\n      this._y2Axis\n        .config(yC)\n        .domain(y2Exists ? y2Domain : yDomain)\n        .gridSize(0)\n        .height(height)\n        .range([this._xAxis.outerBounds().y + x2Height, height - (xHeight + topOffset + verticalMargin)])\n        .scale(y2Exists ? y2Scale.toLowerCase() : yScale.toLowerCase())\n        .select(y2Group.node())\n        .width(width - max([0, xOffsetRight - y2Width]))\n        .title(false)\n        .config(this._y2Config)\n        .config(defaultY2Config)\n        .render();\n    }\n\n    y = (d, y) => {\n      if (y === \"y2\") {\n        if (this._y2Config.scale === \"log\" && d === 0) d = y2Domain[0] < 0 ? -1 : 1;\n        return this._y2Axis._getPosition.bind(this._y2Axis)(d) - x2Height;\n      }\n      else {\n        if (this._yConfig.scale === \"log\" && d === 0) d = yDomain[0] < 0 ? -1 : 1;\n        return this._yAxis._getPosition.bind(this._yAxis)(d) - x2Height;\n      }\n    };\n    const yRange = this._yAxis._getRange();\n\n    const annotationGroup = elem(\"g.d3plus-plot-annotations\", {parent, transition, enter: {transform}, update: {transform}}).node();\n    this._annotations.forEach(annotation => {\n      new shapes[annotation.shape]()\n        .config(annotation)\n        .config({\n          x: d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          x0: this._discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(0),\n          x1: this._discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n          y: d => d.y2 ? y(d.y2, \"y2\") : y(d.y),\n          y0: this._discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(0) - yOffset,\n          y1: this._discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n        })\n        .select(annotationGroup)\n        .render();\n    });\n\n    let yOffset = this._xAxis.barConfig()[\"stroke-width\"];\n    if (yOffset) yOffset /= 2;\n\n    const shapeConfig = {\n      duration: this._duration,\n      label: d => this._drawLabel(d.data, d.i),\n      select: elem(\"g.d3plus-plot-shapes\", {parent, transition, enter: {transform}, update: {transform}}).node(),\n      x: d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n      x0: this._discrete === \"x\" ? d => d.x2 ? x(d.x2, \"x2\") : x(d.x) : x(0),\n      x1: this._discrete === \"x\" ? null : d => d.x2 ? x(d.x2, \"x2\") : x(d.x),\n      y: d => d.y2 ? y(d.y2, \"y2\") : y(d.y),\n      y0: this._discrete === \"y\" ? d => d.y2 ? y(d.y2, \"y2\") : y(d.y) : y(0) - yOffset,\n      y1: this._discrete === \"y\" ? null : d => d.y2 ? y(d.y2, \"y2\") : y(d.y) - yOffset\n    };\n\n    if (this._stacked) {\n      const scale = opp === \"x\" ? x : y;\n      shapeConfig[`${opp}`] = shapeConfig[`${opp}0`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][0]) : scale(0);\n      };\n      shapeConfig[`${opp}1`] = d => {\n        const dataIndex = stackKeys.indexOf(d.id),\n              discreteIndex = discreteKeys.indexOf(d.discrete);\n        return dataIndex >= 0 ? scale(stackData[dataIndex][discreteIndex][1]) : scale(0);\n      };\n    }\n\n    const events = Object.keys(this._on);\n    shapeData.forEach(d => {\n\n      const s = new shapes[d.key]().config(shapeConfig).data(d.values);\n\n      if (d.key === \"Bar\") {\n\n        let space;\n        const scale = this._discrete === \"x\" ? x : y;\n        const vals = (this._discrete === \"x\" ? xDomain : yDomain).filter(d => typeof d !== \"string\" || d.indexOf(\"d3plus-buffer-\") < 0);\n        const range = this._discrete === \"x\" ? xRange : yRange;\n        if (vals.length > 1) space = scale(vals[1]) - scale(vals[0]);\n        else space = range[range.length - 1] - range[0];\n        space -= this._groupPadding;\n\n        let barSize = space;\n\n        const groups = nest()\n          .key(d => d[this._discrete])\n          .key(d => d.group)\n          .entries(d.values);\n\n        const ids = merge(groups.map(d => d.values.map(v => v.key)));\n        const uniqueIds = Array.from(new Set(ids));\n\n        if (max(groups.map(d => d.values.length)) === 1) {\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i));\n        }\n        else {\n\n          barSize = (barSize - this._barPadding * uniqueIds.length - 1) / uniqueIds.length;\n\n          const offset = space / 2 - barSize / 2;\n\n          const xMod = scales.scaleLinear()\n            .domain([0, uniqueIds.length - 1])\n            .range([-offset, offset]);\n\n          s[this._discrete]((d, i) => shapeConfig[this._discrete](d, i) + xMod(uniqueIds.indexOf(d.group)));\n\n        }\n\n        s.width(barSize);\n        s.height(barSize);\n\n      }\n      else if (d.key === \"Line\" && this._confidence) {\n\n        const areaConfig = Object.assign({}, shapeConfig);\n        const key = this._discrete === \"x\" ? \"y\" : \"x\";\n        const scaleFunction = this._discrete === \"x\" ? y : x;\n        areaConfig[`${key}0`] = d => scaleFunction(this._confidence[0] ? d.lci : d[key]);\n        areaConfig[`${key}1`] = d => scaleFunction(this._confidence[1] ? d.hci : d[key]);\n\n        const area = new shapes.Area().config(areaConfig).data(d.values);\n        const confidenceConfig = Object.assign(this._shapeConfig, this._confidenceConfig);\n        area.config(configPrep.bind(this)(confidenceConfig, \"shape\", \"Area\")).render();\n        this._shapes.push(area);\n      }\n\n      const classEvents = events.filter(e => e.includes(`.${d.key}`)),\n            globalEvents = events.filter(e => !e.includes(\".\")),\n            shapeEvents = events.filter(e => e.includes(\".shape\"));\n      for (let e = 0; e < globalEvents.length; e++) s.on(globalEvents[e], d => this._on[globalEvents[e]](d.data, d.i));\n      for (let e = 0; e < shapeEvents.length; e++) s.on(shapeEvents[e], d => this._on[shapeEvents[e]](d.data, d.i));\n      for (let e = 0; e < classEvents.length; e++) s.on(classEvents[e], d => this._on[classEvents[e]](d.data, d.i));\n\n      s.config(configPrep.bind(this)(this._shapeConfig, \"shape\", d.key)).render();\n      this._shapes.push(s);\n\n    });\n\n    return this;\n\n  }\n\n  /**\n      @memberof Plot\n      @desc Allows drawing custom shapes to be used as annotations in the provided x/y plot. This method accepts custom config objects for the [Shape](http://d3plus.org/docs/#Shape) class, either a single config object or an array of config objects. Each config object requires an additional parameter, the \"shape\", which denotes which [Shape](http://d3plus.org/docs/#Shape) sub-class to use ([Rect](http://d3plus.org/docs/#Rect), [Line](http://d3plus.org/docs/#Line), etc). Annotations will be drawn underneath the data to be displayed.\n      @param {Array|Object} *annotations* = []\n      @chainable\n  */\n  annotations(_) {\n    return arguments.length ? (this._annotations = _ instanceof Array ? _ : [_], this) : this._annotations;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between each bar in a group of bars.\n      @param {Number} *value* = 0\n      @chainable\n  */\n  barPadding(_) {\n    return arguments.length ? (this._barPadding = _, this) : this._barPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the baseline for the x/y plot. If *value* is not specified, returns the current baseline.\n      @param {Number} *value*\n      @chainable\n  */\n  baseline(_) {\n    return arguments.length ? (this._baseline = _, this) : this._baseline;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the confidence to the specified array of lower and upper bounds.\n       @param {String[]|Function[]} *value*\n       @chainable\n       @example <caption>Can be called with accessor functions or static keys:</caption>\n       var data = {id: \"alpha\", value: 10, lci: 9, hci: 11};\n       ...\n       // Accessor functions\n       .confidence([function(d) { return d.lci }, function(d) { return d.hci }])\n\n       // Or static keys\n       .confidence([\"lci\", \"hci\"])\n   */\n  confidence(_) {\n    if (arguments.length) {\n      this._confidence = [];\n      const lower = _[0];\n      this._confidence[0] = typeof lower === \"function\" || !lower ? lower : accessor(lower);\n      const upper = _[1];\n      this._confidence[1] = typeof upper === \"function\" || !upper ? upper : accessor(upper);\n\n      return this;\n    }\n    else return this._confidence;\n  }\n\n  /**\n       @memberof Plot\n       @desc If *value* is specified, sets the config method for each shape rendered as a confidence interval and returns the current class instance.\n       @param {Object} [*value*]\n       @chainable\n   */\n  confidenceConfig(_) {\n    return arguments.length ? (this._confidenceConfig = assign(this._confidenceConfig, _), this) : this._confidenceConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the discrete axis to the specified string. If *value* is not specified, returns the current discrete axis.\n      @param {String} *value*\n      @chainable\n  */\n  discrete(_) {\n    return arguments.length ? (this._discrete = _, this) : this._discrete;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the pixel space between groups of bars.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  groupPadding(_) {\n    return arguments.length ? (this._groupPadding = _, this) : this._groupPadding;\n  }\n\n  /**\n      @memberof Plot\n      @desc A JavaScript [sort comparator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) that receives each shape Class (ie. \"Circle\", \"Line\", etc) as it's comparator arguments. Shapes are drawn in groups based on their type, so you are defining the layering order for all shapes of said type.\n      @param {Function} *value*\n      @chainable\n  */\n  shapeSort(_) {\n    return arguments.length ? (this._shapeSort = _, this) : this._shapeSort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size of bubbles to the given Number, data key, or function.\n      @param {Function|Number|String} *value* = 10\n      @chainable\n  */\n  size(_) {\n    return arguments.length ? (this._size = typeof _ === \"function\" || !_ ? _ : accessor(_), this) : this._size;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale maximum to the specified number.\n      @param {Number} *value* = 20\n      @chainable\n  */\n  sizeMax(_) {\n    return arguments.length ? (this._sizeMax = _, this) : this._sizeMax;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale minimum to the specified number.\n      @param {Number} *value* = 5\n      @chainable\n  */\n  sizeMin(_) {\n    return arguments.length ? (this._sizeMin = _, this) : this._sizeMin;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the size scale to the specified string.\n      @param {String} *value* = \"sqrt\"\n      @chainable\n  */\n  sizeScale(_) {\n    return arguments.length ? (this._sizeScale = _, this) : this._sizeScale;\n  }\n\n  /**\n      @memberof Plot\n      @desc If *value* is specified, toggles shape stacking. If *value* is not specified, returns the current stack value.\n      @param {Boolean} *value* = false\n      @chainable\n  */\n  stacked(_) {\n    return arguments.length ? (this._stacked = _, this) : this._stacked;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack offset. If *value* is not specified, returns the current stack offset function.\n      @param {Function|String} *value* = \"descending\"\n      @chainable\n  */\n  stackOffset(_) {\n    return arguments.length ? (this._stackOffset = typeof _ === \"function\" ? _ : d3Shape[`stackOffset${_.charAt(0).toUpperCase() + _.slice(1)}`], this) : this._stackOffset;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the stack order. If *value* is not specified, returns the current stack order function.\n      @param {Function|String|Array} *value* = \"none\"\n      @chainable\n  */\n  stackOrder(_) {\n    return arguments.length ? (this._stackOrder = typeof _ === \"string\" ? d3Shape[`stackOrder${_.charAt(0).toUpperCase() + _.slice(1)}`] : _, this) : this._stackOrder;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x accessor to the specified function or number. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"x\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 accessor to the specified function or number. If *value* is not specified, returns the current x2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  x2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x2 = _;\n      else {\n        this._x2 = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"x\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._x2;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the config method for the x-axis. If *value* is not specified, returns the current x-axis configuration.\n      @param {Object} *value*\n      @chainable\n  */\n  xConfig(_) {\n    return arguments.length ? (this._xConfig = assign(this._xConfig, _), this) : this._xConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the config method for the secondary x-axis. If *value* is not specified, returns the current secondary x-axis configuration.\n      @param {Object} *value*\n      @chainable\n  */\n  x2Config(_) {\n    return arguments.length ? (this._x2Config = assign(this._x2Config, _), this) : this._x2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x domain to the specified array. If *value* is not specified, returns the current x domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  xDomain(_) {\n    return arguments.length ? (this._xDomain = _, this) : this._xDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the x2 domain to the specified array. If *value* is not specified, returns the current x2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  x2Domain(_) {\n    return arguments.length ? (this._x2Domain = _, this) : this._x2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete x axes.\n      @param {Function} *value*\n      @chainable\n  */\n  xSort(_) {\n    return arguments.length ? (this._xSort = _, this) : this._xSort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete x2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  x2Sort(_) {\n    return arguments.length ? (this._x2Sort = _, this) : this._x2Sort;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y accessor to the specified function or number. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"y\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._y;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 accessor to the specified function or number. If *value* is not specified, returns the current y2 accessor.\n       @param {Function|Number} *value*\n       @chainable\n   */\n  y2(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y2 = _;\n      else {\n        this._y2 = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"y2\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._y2;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the config method for the y-axis. If *value* is not specified, returns the current y-axis configuration.\n\n*Note:* If a \"domain\" array is passed to the y-axis config, it will be reversed.\n      @param {Object} *value*\n      @chainable\n  */\n  yConfig(_) {\n    if (arguments.length) {\n      if (_.domain) _.domain = _.domain.slice().reverse();\n      this._yConfig = assign(this._yConfig, _);\n      return this;\n    }\n    return this._yConfig;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the config method for the secondary y-axis. If *value* is not specified, returns the current secondary y-axis configuration.\n      @param {Object} *value*\n      @chainable\n  */\n  y2Config(_) {\n    return arguments.length ? (this._y2Config = assign(this._y2Config, _), this) : this._y2Config;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y domain to the specified array. If *value* is not specified, returns the current y domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n      @param {Array} *value*\n      @chainable\n  */\n  yDomain(_) {\n    return arguments.length ? (this._yDomain = _, this) : this._yDomain;\n  }\n\n  /**\n       @memberof Plot\n       @desc Sets the y2 domain to the specified array. If *value* is not specified, returns the current y2 domain. Additionally, if either value of the array is undefined, it will be calculated from the data.\n       @param {Array} *value*\n       @chainable\n   */\n  y2Domain(_) {\n    return arguments.length ? (this._y2Domain = _, this) : this._y2Domain;\n  }\n\n  /**\n      @memberof Plot\n      @desc Defines a custom sorting comparitor function to be used for discrete y axes.\n      @param {Function} *value*\n      @chainable\n  */\n  ySort(_) {\n    return arguments.length ? (this._ySort = _, this) : this._ySort;\n  }\n\n  /**\n       @memberof Plot\n       @desc Defines a custom sorting comparitor function to be used for discrete y2 axes.\n       @param {Function} *value*\n       @chainable\n   */\n  y2Sort(_) {\n    return arguments.length ? (this._y2Sort = _, this) : this._y2Sort;\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class AreaPlot\n    @extends Plot\n    @desc Creates an area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Area\")\n*/\nexport default class AreaPlot extends Plot {\n\n  /**\n      @memberof AreaPlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    this._shape = constant(\"Area\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BarChart\n    @extends Plot\n    @desc Creates a bar chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .baseline(0)\n  .discrete(\"x\")\n  .shape(\"Bar\")\n*/\nexport default class BarChart extends Plot {\n\n  /**\n      @memberof BarChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._baseline = 0;\n    this._discrete = \"x\";\n    this._shape = constant(\"Bar\");\n    this.x(\"x\");\n\n  }\n\n}\n","import {assign, constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BoxWhisker\n    @extends Plot\n    @desc Creates a simple box and whisker based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Box\")\n*/\nexport default class BoxWhisker extends Plot {\n\n  /**\n      @memberof BoxWhisker\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Box\");\n    this.x(\"x\");\n\n    this._tooltipConfig = assign(this._tooltipConfig, {\n      title: (d, i) => {\n        if (!d) return \"\";\n        while (d.__d3plus__ && d.data) {\n          d = d.data;\n          i = d.i;\n        }\n        if (this._label) return this._label(d, i);\n        const l = this._ids(d, i).slice(0, this._drawDepth);\n        return l[l.length - 1];\n      }\n    });\n\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class BumpChart\n    @extends Plot\n    @desc Creates a bump chart based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n  .x(\"x\")\n  .y2(d => this._y(d))\n  .yConfig({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const startData = data.filter(d => d.x === xDomain[0]);\n      const d = startData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .y2Config({\n    tickFormat: val => {\n      const data = this._formattedData;\n      const xDomain = this._xDomain;\n      const endData = data.filter(d => d.x === xDomain[xDomain.length - 1]);\n      const d = endData.find(d => d.y === val);\n      return this._drawLabel(d, d.i);\n     }\n   })\n  .ySort((a, b) => b.y - a.y)\n  .y2Sort((a, b) => b.y - a.y)\n*/\nexport default class BumpChart extends Plot {\n\n  /**\n      @memberof BumpChart\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Line\");\n    this.x(\"x\");\n    this.y2(d => this._y(d));\n\n    this.yConfig({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMin = data[0].x instanceof Date ? data[0].x.getTime() : data[0].x;\n        const startData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMin);\n        const d = startData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.y2Config({\n      tickFormat: val => {\n        const data = this._formattedData;\n        const xMax = data[data.length - 1].x instanceof Date ? data[data.length - 1].x.getTime() : data[data.length - 1].x;\n        const endData = data.filter(d => (d.x instanceof Date ? d.x.getTime() : d.x) === xMax);\n        const d = endData.find(d => d.y === val);\n        return d ? this._drawLabel(d, d.i) : \"\";\n      }\n    });\n    this.ySort((a, b) => this._y(b) - this._y(a));\n    this.y2Sort((a, b) => this._y(b) - this._y(a));\n  }\n\n}\n","import {constant} from \"d3plus-common\";\n\nimport {default as Plot} from \"./Plot\";\n\n/**\n    @class LinePlot\n    @extends Plot\n    @desc Creates a line plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.Plot()\n  .discrete(\"x\")\n  .shape(\"Line\")\n*/\nexport default class LinePlot extends Plot {\n\n  /**\n      @memberof LinePlot\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._discrete = \"x\";\n    this._shape = constant(\"Line\");\n    this.x(\"x\");\n\n  }\n\n}\n","/**\n    @external Viz\n    @see https://github.com/d3plus/d3plus-viz#Viz\n*/\nimport {nest} from \"d3-collection\";\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Circle, Path, Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nconst tau = Math.PI * 2;\n\n/**\n    @class Radar\n    @extends Plot\n    @desc Creates a radar visualization based on an array of data.\n*/\nexport default class Radar extends Viz {\n\n  /**\n      @memberof Radar\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n    super();\n\n    this._axisConfig = {\n      fill: constant(\"none\"),\n      stroke: constant(\"#CCC\"),\n      strokeWidth: constant(1)\n    };\n    this._hover = true;\n    this._levels = 6;\n    this._radarPadding = 100;\n    this._shape = constant(\"Path\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      Circle: {\n        r: accessor(\"r\", 0)\n      },\n      Path: {}\n    });\n    this._value = accessor(\"value\");\n    this._x = accessor(\"x\");\n    this._y = accessor(\"y\");\n  }\n\n  /**\n      Extends the draw behavior of the abstract Plot class.\n      @private\n  */\n  _draw(callback) {\n    super._draw(callback);\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const radius = (Math.min(height, width) - this._radarPadding) / 2,\n          transform = `translate(${width / 2}, ${height / 2})`;\n\n    const maxValue = Math.max(...this._data.map((d, i) => this._value(d, i))),\n          nestedAxisData = nest()\n        .key(this._y)\n        .entries(this._data),\n          nestedGroupData = nest()\n        .key(this._x)\n        .entries(this._data);\n\n    const circularAxis = Array.from(Array(this._levels).keys()).map(d => ({\n      id: d,\n      r: radius * ((d + 1) / this._levels)\n    }));\n\n    new Circle()\n      .data(circularAxis)\n      .select(\n        elem(\"g.d3plus-Radar-radial-circles\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(this._axisConfig)\n      .render();\n\n    const totalAxis = nestedAxisData.length;\n    const polarAxis = nestedAxisData\n      .map((d, i) => {\n        const width = 100;\n        const fontSize =\n          this._shapeConfig.labelConfig.fontSize &&\n            this._shapeConfig.labelConfig.fontSize(d, i) ||\n          11;\n\n        const lineHeight = fontSize * 1.4;\n        const height = lineHeight * 2;\n        const padding = 10,\n              quadrant = parseInt(360 - 360 / totalAxis * i / 90, 10) % 4 + 1,\n              radians = tau / totalAxis * i;\n\n        let angle = 360 / totalAxis * i;\n\n        let textAnchor = \"start\";\n        let x = padding;\n\n        if (quadrant === 2 || quadrant === 3) {\n          x = -width - padding;\n          textAnchor = \"end\";\n          angle += 180;\n        }\n\n        const labelBounds = {\n          x,\n          y: -height / 2,\n          width,\n          height\n        };\n\n        return {\n          id: d.key,\n          angle,\n          textAnchor,\n          labelBounds,\n          rotateAnchor: [-x, height / 2],\n          x: radius * Math.cos(radians),\n          y: radius * Math.sin(radians)\n        };\n      })\n      .sort((a, b) => a.key - b.key);\n\n    new Rect()\n      .data(polarAxis)\n      .rotate(d => d.angle)\n      .width(0)\n      .height(0)\n      .x(d => d.x)\n      .y(d => d.y)\n      .label(d => d.id)\n      .labelBounds(d => d.labelBounds)\n      .labelConfig({\n        padding: 0,\n        textAnchor: d => d.data.textAnchor,\n        rotateAnchor: d => d.data.data.rotateAnchor,\n        fontColor: \"black\",\n        verticalAlign: \"middle\"\n      })\n      .select(\n        elem(\"g.d3plus-Radar-text\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .render();\n\n    new Path()\n      .data(polarAxis)\n      .d(d => `M${0},${0} ${-d.x},${-d.y}`)\n      .select(\n        elem(\"g.d3plus-Radar-axis\", {\n          parent: this._select,\n          enter: {transform},\n          update: {transform}\n        }).node()\n      )\n      .config(this._axisConfig)\n      .render();\n\n    const groupData = nestedGroupData.map(h => {\n      const q = h.values.map((d, i) => {\n        const r = this._value(d, i) / maxValue * radius,\n              radians = tau / totalAxis * i;\n        return {\n          x: r * Math.cos(radians),\n          y: r * Math.sin(radians)\n        };\n      });\n\n      const d = `M ${q[0].x} ${q[0].y} ${q\n        .map(l => `L ${l.x} ${l.y}`)\n        .join(\" \")} L ${q[0].x} ${q[0].y}`;\n\n      return {id: h.key, d};\n    });\n\n    this._shapes.push(\n      new Path()\n        .data(groupData)\n        .d(d => d.d)\n        .select(\n          elem(\"g.d3plus-Radar-items\", {\n            parent: this._select,\n            enter: {transform},\n            update: {transform}\n          }).node()\n        )\n        .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n        .render()\n    );\n\n    return this;\n  }\n\n  /**\n      @memberof Radar\n      @desc If *value* is specified, sets the padding of the chart and returns the current class instance. If *value* is not specified, returns the current radarPadding. By default, the radarPadding is 100.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  radarPadding(_) {\n    return arguments.length\n      ? (this._radarPadding = _, this)\n      : this._radarPadding;\n  }\n\n  /**\n      @memberof Radar\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|String} *value*\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length\n      ? (this._value = typeof _ === \"function\" ? _ : accessor(_), this)\n      : this._value;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the x accessor to the specified function or number. If *value* is not specified, returns the current x accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  x(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._x = _;\n      else {\n        this._x = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"x\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._x;\n  }\n\n  /**\n      @memberof Plot\n      @desc Sets the y accessor to the specified function or number. If *value* is not specified, returns the current y accessor.\n      @param {Function|Number} *value*\n      @chainable\n  */\n  y(_) {\n    if (arguments.length) {\n      if (typeof _ === \"function\") this._y = _;\n      else {\n        this._y = accessor(_);\n        if (!this._aggs[_] && this._discrete === \"y\") {\n          this._aggs[_] = a => {\n            const v = Array.from(new Set(a));\n            return v.length === 1 ? v[0] : v;\n          };\n        }\n      }\n      return this;\n    }\n    else return this._y;\n  }\n}\n","import {default as AreaPlot} from \"./AreaPlot\";\n\n/**\n    @class StackedArea\n    @extends Area\n    @desc Creates a stacked area plot based on an array of data.\n    @example <caption>the equivalent of calling:</caption>\nnew d3plus.AreaPlot()\n  .stacked(true)\n*/\nexport default class StackedArea extends AreaPlot {\n\n  /**\n      @memberof StackedArea\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Plot.\n      @private\n  */\n  constructor() {\n\n    super();\n    this._stacked = true;\n\n  }\n\n}\n"],"names":["const","let","nest","this","sum","max","min","v","super","constant","assign","colorAssign","d3Shape.stackOffsetDiverging","d3Shape.stackOrderNone","accessor","AxisBottom","AxisTop","AxisLeft","AxisRight","extent","date","d3Shape.stack","range","elem","merge","scales.scaleLinear","shapes.Area","configPrep","e","Viz","Circle","Rect","Path"],"mappings":"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"}