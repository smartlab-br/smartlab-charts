{"version":3,"file":"d3plus-color.js","sources":["../src/add.js","../src/defaults.js","../src/assign.js","../src/contrast.js","../src/legible.js","../src/lighter.js","../src/subtract.js"],"sourcesContent":["import {hsl} from \"d3-color\";\n\n/**\n    @function colorAdd\n    @desc Adds two colors together.\n    @param {String} c1 The first color, a valid CSS color string.\n    @param {String} c2 The second color, also a valid CSS color string.\n    @param {String} [o1 = 1] Value from 0 to 1 of the first color's opacity.\n    @param {String} [o2 = 1] Value from 0 to 1 of the first color's opacity.\n    @returns {String}\n*/\nexport default function(c1, c2, o1 = 1, o2 = 1) {\n  c1 = hsl(c1);\n  c2 = hsl(c2);\n  let d = Math.abs(c2.h * o2 - c1.h * o1);\n  if (d > 180) d -= 360;\n  let h = (Math.min(c1.h, c2.h) + d / 2) % 360;\n  const l = c1.l + (c2.l * o2 - c1.l * o1) / 2,\n        s = c1.s + (c2.s * o2 - c1.s * o1) / 2;\n  // a = o1 + (o2 - o1) / 2;\n  if (h < 0) h += 360;\n  return hsl(`hsl(${h},${s * 100}%,${l * 100}%)`).toString();\n  // return hsl(`hsl(${h},${s * 100}%,${l * 100}%,${a})`).toString();\n}\n","import {scaleOrdinal} from \"d3-scale\";\n\n/**\n    @namespace {Object} colorDefaults\n    @desc A set of default color values used when assigning colors based on data.\n      *\n      * | Name | Default | Description |\n      * |---|---|---|\n      * | dark | #444444 | Used in the [contrast](#contrast) function when the color given is very light. |\n      * | light | #f7f7f7 | Used in the [contrast](#contrast) function when the color given is very dark. |\n      * | missing | #cccccc | Used in the [assign](#assign) function when the value passed is `null` or `undefined`. |\n      * | off | #b22200 | Used in the [assign](#assign) function when the value passed is `false`. |\n      * | on | #224f20 | Used in the [assign](#assign) function when the value passed is `true`. |\n      * | scale | #b22200, #eace3f, #282f6b, #b35c1e, #224f20, #5f487c, #759143, #419391, #993c88, #e89c89, #ffee8d, #afd5e8, #f7ba77, #a5c697, #c5b5e5, #d1d392, #bbefd0, #e099cf | An ordinal scale used in the [assign](#assign) function for non-valid color strings and numbers. |\n*/\nconst defaults = {\n  dark: \"#444444\",\n  light: \"#f7f7f7\",\n  missing: \"#cccccc\",\n  off: \"#b22200\",\n  on: \"#224f20\",\n  scale: scaleOrdinal().range([\n    \"#b22200\", \"#282f6b\", \"#eace3f\", \"#b35c1e\", \"#224f20\", \"#5f487c\",\n    \"#759143\", \"#419391\", \"#993c88\", \"#e89c89\", \"#ffee8d\", \"#afd5e8\",\n    \"#f7ba77\", \"#a5c697\", \"#c5b5e5\", \"#d1d392\", \"#bbefd0\", \"#e099cf\"\n  ])\n};\n\n/**\n    Returns a color based on a key, whether it is present in a user supplied object or in the default object.\n    @returns {String}\n    @private\n*/\nexport function getColor(k, u = {}) {\n  return k in u ? u[k] : k in defaults ? defaults[k] : defaults.missing;\n}\n\nexport default defaults;\n","import {color} from \"d3-color\";\nimport {getColor} from \"./defaults\";\n\n/**\n    @function colorAssign\n    @desc Assigns a color to a value using a predefined set of defaults.\n    @param {String} c A valid CSS color string.\n    @param {Object} [u = defaults] An object containing overrides of the default colors.\n    @returns {String}\n*/\nexport default function(c, u = {}) {\n\n  // If the value is null or undefined, set to grey.\n  if ([null, void 0].indexOf(c) >= 0) return getColor(\"missing\", u);\n  // Else if the value is true, set to green.\n  else if (c === true) return getColor(\"on\", u);\n  // Else if the value is false, set to red.\n  else if (c === false) return getColor(\"off\", u);\n\n  const p = color(c);\n  // If the value is not a valid color string, use the color scale.\n  if (!p) return getColor(\"scale\", u)(c);\n\n  return c.toString();\n\n}\n","import {getColor} from \"./defaults\";\nimport {rgb} from \"d3-color\";\n\n/**\n    @function colorContrast\n    @desc A set of default color values used when assigning colors based on data.\n    @param {String} c A valid CSS color string.\n    @param {Object} [u = defaults] An object containing overrides of the default colors.\n    @returns {String}\n*/\nexport default function(c, u = {}) {\n  c = rgb(c);\n  const yiq = (c.r * 299 + c.g * 587 + c.b * 114) / 1000;\n  return yiq >= 128 ? getColor(\"dark\", u) : getColor(\"light\", u);\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorLegible\n    @desc Darkens a color so that it will appear legible on a white background.\n    @param {String} c A valid CSS color string.\n    @returns {String}\n*/\nexport default function(c) {\n  c = hsl(c);\n  if (c.l > 0.45) {\n    if (c.s > 0.8) c.s = 0.8;\n    c.l = 0.45;\n  }\n  return c.toString();\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorLighter\n    @desc Similar to d3.color.brighter, except that this also reduces saturation so that colors don't appear neon.\n    @param {String} c A valid CSS color string.\n    @param {String} [i = 0.5] A value from 0 to 1 dictating the strength of the function.\n    @returns {String}\n*/\nexport default function(c, i = 0.5) {\n  c = hsl(c);\n  i *= 1 - c.l;\n  c.l += i;\n  c.s -= i;\n  return c.toString();\n}\n","import {hsl} from \"d3-color\";\n\n/**\n    @function colorSubtract\n    @desc Subtracts one color from another.\n    @param {String} c1 The base color, a valid CSS color string.\n    @param {String} c2 The color to remove from the base color, also a valid CSS color string.\n    @param {String} [o1 = 1] Value from 0 to 1 of the first color's opacity.\n    @param {String} [o2 = 1] Value from 0 to 1 of the first color's opacity.\n    @returns {String}\n*/\nexport default function(c1, c2, o1 = 1, o2 = 1) {\n  c1 = hsl(c1);\n  c2 = hsl(c2);\n  let d = c2.h * o2 - c1.h * o1;\n  if (Math.abs(d) > 180) d -= 360;\n  let h = (c1.h - d) % 360;\n  const l = c1.l - (c2.l * o2 - c1.l * o1) / 2,\n        s = c1.s - (c2.s * o2 - c1.s * o1) / 2;\n  // a = o1 - (o2 - o1) / 2;\n  if (h < 0) h += 360;\n  return hsl(`hsl(${h},${s * 100}%,${l * 100}%)`).toString();\n  // return hsl(`hsl(${h},${s * 100}%,${l * 100}%,${a})`).toString();\n}\n"],"names":["c1","c2","o1","o2","hsl","d","Math","abs","h","min","l","s","toString","defaults","dark","light","missing","off","on","scale","scaleOrdinal","range","getColor","k","u","c","indexOf","p","color","rgb","yiq","r","g","b","i"],"mappings":"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}